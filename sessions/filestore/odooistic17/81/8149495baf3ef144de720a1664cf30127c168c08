)]}'
{"version": 3, "sources": ["/base/static/tests/test_ir_model_fields_translation.js", "/web/static/tests/helpers/cleanup.js", "/web/static/tests/helpers/utils.js", "/web/static/tests/utils.js", "/mail/static/tests/tours/discuss_channel_as_guest_tour.js", "/mail/static/tests/tours/discuss_channel_public_tour.js", "/mail/static/tests/tours/discuss_channel_tour.js", "/mail/static/tests/tours/mail_activity_schedule_from_chatter.js", "/mail/static/tests/tours/mail_composer_test_tour.js", "/mail/static/tests/tours/mail_message_load_order_tour.js", "/mail/static/tests/tours/mail_template_dynamic_placeholder_tour.js", "/mail/static/tests/tours/user_modify_own_profile_tour.js", "/portal/static/tests/tours/portal.js", "/account/static/tests/tours/tax_group_tests.js", "/sale/static/tests/tours/sale_signature.js", "/project/static/tests/tours/personal_stage_tour.js", "/project/static/tests/tours/project_burndown_chart_tour.js", "/project/static/tests/tours/project_sharing_tour.js", "/project/static/tests/tours/project_tags_filter_tour_tests.js", "/project/static/tests/tours/project_tour.js", "/project/static/tests/tours/project_update_tour_tests.js", "/contacts/static/tests/tours/debug_menu_set_defaults.js", "/mass_mailing/static/tests/tours/mailing_campaign.js", "/mass_mailing/static/tests/tours/mailing_editor.js", "/mass_mailing/static/tests/tours/mailing_editor_theme.js", "/mass_mailing/static/tests/tours/mailing_portal_unsubscribe_from_document.js", "/mass_mailing/static/tests/tours/mailing_portal_unsubscribe_from_list.js", "/mass_mailing/static/tests/tours/mailing_portal_unsubscribe_from_my.js", "/mass_mailing/static/tests/tours/mass_mailing_code_view.js", "/mass_mailing/static/tests/tours/snippets_mailing_menu_tabs.js", "/mass_mailing/static/tests/tours/snippets_mailing_menu_toolbar.js", "/mass_mailing/static/tests/tours/snippets_mailing_menu_toolbar_mobile.js", "/hr/static/tests/tours/hr_employee_flow.js", "/hr/static/tests/tours/user_modify_own_profile_tour.js", "/survey/static/tests/tours/certification_failure.js", "/survey/static/tests/tours/certification_success.js", "/survey/static/tests/tours/survey.js", "/survey/static/tests/tours/survey_chained_conditional_questions.js", "/survey/static/tests/tours/survey_conditional_questions_on_different_page.js", "/survey/static/tests/tours/survey_form.js", "/survey/static/tests/tours/survey_prefill.js", "/survey/static/tests/tours/survey_roaming_mandatory_questions.js", "/survey/static/tests/tours/survey_session_manage_test.js", "/survey/static/tests/tours/survey_tour_session_manage.js", "/survey/static/tests/tours/survey_tour_session_start.js", "/survey/static/tests/tours/survey_tour_session_tools.js", "/hr_skills/static/tests/tours/skills_tour.js", "/auth_totp/static/tests/totp_flow.js", "/auth_totp_mail/static/tests/totp_flow.js", "/auth_totp_portal/static/tests/totp_portal.js", "/sale_project/static/tests/tours/project_tour.js"], "mappings": "AAAA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjnksBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzlGA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrhIA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClLA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnCA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjjIA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjHA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjvLA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7DA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1DA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClzlEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrzGA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpnxJA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvCA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClVA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9CA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrtlVA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1HA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA", "sourcesContent": ["/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nfunction checkLoginColumn(translation) {\n    return [\n        stepUtils.showAppsMenuItem(), {\n            content: \"Settings\",\n            trigger: 'a[data-menu-xmlid=\"base.menu_administration\"]',\n            run: 'click',\n        }, {\n            content: \"Open Users & Companies\",\n            trigger: '[data-menu-xmlid=\"base.menu_users\"]',\n            run: \"click\",\n        }, {\n            content: \"Open Users\",\n            trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n            run: \"click\",\n        }, {\n            content: `Login column should be ${translation}`,\n            trigger: `[data-name=\"login\"] span:contains(\"${translation}\")`,\n            isCheck: true,\n        }\n    ]\n}\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_en_tour', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Login')\n});\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_en_tour2', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Login2')\n});\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_fr_tour', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Identifiant')\n});\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_fr_tour2', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Identifiant2')\n});\n", "/** @odoo-module **/\n\n// -----------------------------------------------------------------------------\n// Cleanup\n// -----------------------------------------------------------------------------\n\nconst cleanups = [];\n\n/**\n * Register a cleanup callback that will be executed whenever the current test\n * is done.\n *\n * - the cleanups will be executed in reverse order\n * - they will be executed even if the test fails/crashes\n *\n * @param {Function} callback\n */\nexport function registerCleanup(callback) {\n    cleanups.push(callback);\n}\n\nif (window.QUnit) {\n    QUnit.on(\"OdooAfterTestHook\", (info) => {\n        if (QUnit.config.debug) {\n            return;\n        }\n        let cleanup;\n        // note that this calls the cleanup callbacks in reverse order!\n        while ((cleanup = cleanups.pop())) {\n            try {\n                cleanup(info);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    });\n\n    // -----------------------------------------------------------------------------\n    // Check leftovers\n    // -----------------------------------------------------------------------------\n\n    /**\n     * List of elements tolerated in the body after a test. The property \"keep\"\n     * prevents the element from being removed (typically: qunit suite elements).\n     */\n    const validElements = [\n        // always in the body:\n        { tagName: \"DIV\", attr: \"id\", value: \"qunit\", keep: true },\n        { tagName: \"DIV\", attr: \"id\", value: \"qunit-fixture\", keep: true },\n        // shouldn't be in the body after a test but are tolerated:\n        { tagName: \"SCRIPT\", attr: \"id\", value: \"\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"o_notification_manager\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"tooltip fade bs-tooltip-auto\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"tooltip fade bs-tooltip-auto show\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"tooltip tooltip-field-info fade bs-tooltip-auto\" },\n        {\n            tagName: \"DIV\",\n            attr: \"class\",\n            value: \"tooltip tooltip-field-info fade bs-tooltip-auto show\",\n        },\n        { tagName: \"SPAN\", attr: \"class\", value: \"select2-hidden-accessible\" },\n\n        // Due to a Document Kanban bug (already present in 12.0)\n        { tagName: \"DIV\", attr: \"class\", value: \"ui-helper-hidden-accessible\" },\n        {\n            tagName: \"UL\",\n            attr: \"class\",\n            value: \"ui-menu ui-widget ui-widget-content ui-autocomplete ui-front\",\n        },\n        {\n            tagName: \"UL\",\n            attr: \"class\",\n            value: \"ui-menu ui-widget ui-widget-content ui-autocomplete dropdown-menu ui-front\", // many2ones\n        },\n    ];\n\n    /**\n     * After each test, we check that there is no leftover in the DOM.\n     *\n     * Note: this event is not QUnit standard, we added it for this specific use case.\n     * As a payload, an object with keys 'moduleName' and 'testName' is provided. It\n     * is used to indicate the test that left elements in the DOM, when it happens.\n     */\n    QUnit.on(\"OdooAfterTestHook\", function (info) {\n        if (QUnit.config.debug) {\n            return;\n        }\n        const failed = info.testReport.getStatus() === \"failed\";\n        const toRemove = [];\n        // check for leftover elements in the body\n        for (const bodyChild of document.body.children) {\n            const tolerated = validElements.find(\n                (e) => e.tagName === bodyChild.tagName && bodyChild.getAttribute(e.attr) === e.value\n            );\n            if (!failed && !tolerated) {\n                QUnit.pushFailure(\n                    `Body still contains undesirable elements:\\n${bodyChild.outerHTML}`\n                );\n            }\n            if (!tolerated || !tolerated.keep) {\n                toRemove.push(bodyChild);\n            }\n        }\n        // cleanup leftovers in #qunit-fixture\n        const qunitFixture = document.getElementById(\"qunit-fixture\");\n        if (qunitFixture.children.length) {\n            toRemove.push(...qunitFixture.children);\n        }\n        // remove unwanted elements if not in debug\n        for (const el of toRemove) {\n            el.remove();\n        }\n        document.body.classList.remove(\"modal-open\");\n    });\n}\n", "/** @odoo-module **/\n\nimport { templates } from \"@web/core/assets\";\nimport { browser } from \"@web/core/browser/browser\";\nimport { isMacOS } from \"@web/core/browser/feature_detection\";\nimport { download } from \"@web/core/network/download\";\nimport { Deferred } from \"@web/core/utils/concurrency\";\nimport { patch } from \"@web/core/utils/patch\";\nimport { isVisible } from \"@web/core/utils/ui\";\nimport { _t } from \"@web/core/l10n/translation\";\nimport { registerCleanup } from \"./cleanup\";\n\nimport {\n    App,\n    onError,\n    onMounted,\n    onPatched,\n    onRendered,\n    onWillDestroy,\n    onWillPatch,\n    onWillRender,\n    onWillStart,\n    onWillUnmount,\n    onWillUpdateProps,\n    useComponent,\n} from \"@odoo/owl\";\n\n/**\n * @typedef {keyof HTMLElementEventMap | keyof WindowEventMap} EventType\n *\n * @typedef {Side | `${Side}-${Side}` | { x?: number, y?: number }} Position\n *\n * @typedef {\"bottom\" | \"left\" | \"right\" | \"top\"} Side\n *\n * @typedef TriggerEventOptions\n * @property {boolean} [skipVisibilityCheck=false]\n * @property {boolean} [sync=false]\n */\n\n/**\n * Patch the native Date object\n *\n * Note that it will be automatically unpatched at the end of the test\n *\n * @param {number} [year]\n * @param {number} [month]\n * @param {number} [day]\n * @param {number} [hours]\n * @param {number} [minutes]\n * @param {number} [seconds]\n * @param {number} [ms=0]\n */\nexport function patchDate(year, month, day, hours, minutes, seconds, ms = 0) {\n    var RealDate = window.Date;\n    var actualDate = new RealDate();\n\n    // By default, RealDate uses the browser offset, so we must replace it with the offset fixed in luxon.\n    var fakeDate = new RealDate(year, month, day, hours, minutes, seconds, ms);\n    if (!(luxon.Settings.defaultZone instanceof luxon.FixedOffsetZone)) {\n        throw new Error(\"luxon.Settings.defaultZone must be a FixedOffsetZone\");\n    }\n    const browserOffset = -fakeDate.getTimezoneOffset();\n    const patchedOffset = luxon.Settings.defaultZone.offset();\n    const offsetDiff = patchedOffset - browserOffset;\n    const correctedMinutes = fakeDate.getMinutes() - offsetDiff;\n    fakeDate.setMinutes(correctedMinutes);\n\n    var timeInterval = actualDate.getTime() - fakeDate.getTime();\n\n    // eslint-disable-next-line no-global-assign\n    window.Date = (function (NativeDate) {\n        function Date(Y, M, D, h, m, s, ms) {\n            var length = arguments.length;\n            let date;\n            if (arguments.length > 0) {\n                date =\n                    length == 1 && String(Y) === Y // isString(Y)\n                        ? // We explicitly pass it through parse:\n                          new NativeDate(Date.parse(Y))\n                        : // We have to manually make calls depending on argument\n                        // length here\n                        length >= 7\n                        ? new NativeDate(Y, M, D, h, m, s, ms)\n                        : length >= 6\n                        ? new NativeDate(Y, M, D, h, m, s)\n                        : length >= 5\n                        ? new NativeDate(Y, M, D, h, m)\n                        : length >= 4\n                        ? new NativeDate(Y, M, D, h)\n                        : length >= 3\n                        ? new NativeDate(Y, M, D)\n                        : length >= 2\n                        ? new NativeDate(Y, M)\n                        : length >= 1\n                        ? new NativeDate(Y)\n                        : new NativeDate();\n                // Prevent mixups with unfixed Date object\n                date.constructor = Date;\n                return date;\n            } else {\n                date = new NativeDate();\n                var time = date.getTime();\n                time -= timeInterval;\n                date.setTime(time);\n                return date;\n            }\n        }\n\n        // Copy any custom methods a 3rd party library may have added\n        for (var key in NativeDate) {\n            Date[key] = NativeDate[key];\n        }\n\n        // Copy \"native\" methods explicitly; they may be non-enumerable\n        // exception: 'now' uses fake date as reference\n        Date.now = function () {\n            var date = new NativeDate();\n            var time = date.getTime();\n            time -= timeInterval;\n            return time;\n        };\n        Date.UTC = NativeDate.UTC;\n        Date.prototype = NativeDate.prototype;\n        Date.prototype.constructor = Date;\n\n        // Upgrade Date.parse to handle simplified ISO 8601 strings\n        Date.parse = NativeDate.parse;\n        return Date;\n    })(Date);\n\n    registerCleanup(() => {\n        window.Date = RealDate;\n    });\n}\n\n/**\n * Applies a fixed time zone to luxon based on an offset to the UTC time zone.\n *\n * @param {number} offset the number of minutes ahead or behind the UTC time zone\n *                          +120 => UTC+2\n *                          -120 => UTC-2\n */\nexport function patchTimeZone(offset) {\n    patchWithCleanup(luxon.Settings, { defaultZone: luxon.FixedOffsetZone.instance(offset) });\n}\n\n/**\n *\n * @param {Object} obj object to patch\n * @param {Object} patchValue the actual patch description\n */\nexport function patchWithCleanup(obj, patchValue) {\n    const unpatch = patch(obj, patchValue);\n    registerCleanup(() => {\n        unpatch();\n    });\n}\n\n/**\n * @returns {Element}\n */\nexport function getFixture() {\n    if (!window.QUnit) {\n        return document;\n    }\n    if (QUnit.config.debug) {\n        return document.body;\n    } else {\n        return document.getElementById(\"qunit-fixture\");\n    }\n}\n\nexport async function nextTick() {\n    await new Promise((resolve) => window.requestAnimationFrame(resolve));\n    await new Promise((resolve) => setTimeout(resolve));\n}\n\nexport function makeDeferred() {\n    return new Deferred();\n}\n\nexport function findElement(el, selector) {\n    let target = el;\n    if (selector) {\n        const els = el.querySelectorAll(selector);\n        if (els.length === 0) {\n            throw new Error(`No element found (selector: ${selector})`);\n        }\n        if (els.length > 1) {\n            throw new Error(`Found ${els.length} elements, instead of 1 (selector: ${selector})`);\n        }\n        target = els[0];\n    }\n    return target;\n}\n\n//-----------------------------------------------------------------------------\n// Event init attributes mappers\n//-----------------------------------------------------------------------------\n\n/** @param {EventInit} [args] */\nconst mapBubblingEvent = (args) => ({ ...args, bubbles: true });\n\n/** @param {EventInit} [args] */\nconst mapNonBubblingEvent = (args) => ({ ...args, bubbles: false });\n\n/** @param {EventInit} [args={}] */\nconst mapBubblingPointerEvent = (args = {}) => ({\n    clientX: args.pageX,\n    clientY: args.pageY,\n    ...args,\n    bubbles: true,\n    cancelable: true,\n    view: window,\n});\n\n/** @param {EventInit} [args] */\nconst mapNonBubblingPointerEvent = (args) => ({\n    ...mapBubblingPointerEvent(args),\n    bubbles: false,\n    cancelable: false,\n});\n\n/** @param {EventInit} [args={}] */\nconst mapCancelableTouchEvent = (args = {}) => ({\n    ...args,\n    bubbles: true,\n    cancelable: true,\n    composed: true,\n    rotation: 0.0,\n    touches: args.touches ? [...args.touches.map((e) => new Touch(e))] : undefined,\n    view: window,\n    zoom: 1.0,\n});\n\n/** @param {EventInit} [args] */\nconst mapNonCancelableTouchEvent = (args) => ({\n    ...mapCancelableTouchEvent(args),\n    cancelable: false,\n});\n\n/** @param {EventInit} [args] */\nconst mapKeyboardEvent = (args) => ({\n    ...args,\n    bubbles: true,\n    cancelable: true,\n});\n\n/**\n * @template {typeof Event} T\n * @param {EventType} eventType\n * @returns {[T, (attrs: EventInit) => EventInit]}\n */\nconst getEventConstructor = (eventType) => {\n    switch (eventType) {\n        // Mouse events\n        case \"auxclick\":\n        case \"click\":\n        case \"contextmenu\":\n        case \"dblclick\":\n        case \"mousedown\":\n        case \"mouseup\":\n        case \"mousemove\":\n        case \"mouseover\":\n        case \"mouseout\": {\n            return [MouseEvent, mapBubblingPointerEvent];\n        }\n        case \"mouseenter\":\n        case \"mouseleave\": {\n            return [MouseEvent, mapNonBubblingPointerEvent];\n        }\n        // Pointer events\n        case \"pointerdown\":\n        case \"pointerup\":\n        case \"pointermove\":\n        case \"pointerover\":\n        case \"pointerout\": {\n            return [PointerEvent, mapBubblingPointerEvent];\n        }\n        case \"pointerenter\":\n        case \"pointerleave\": {\n            return [PointerEvent, mapNonBubblingPointerEvent];\n        }\n        // Focus events\n        case \"focusin\": {\n            return [FocusEvent, mapBubblingEvent];\n        }\n        case \"focus\":\n        case \"blur\": {\n            return [FocusEvent, mapNonBubblingEvent];\n        }\n        // Clipboard events\n        case \"cut\":\n        case \"copy\":\n        case \"paste\": {\n            return [ClipboardEvent, mapBubblingEvent];\n        }\n        // Keyboard events\n        case \"keydown\":\n        case \"keypress\":\n        case \"keyup\": {\n            return [KeyboardEvent, mapKeyboardEvent];\n        }\n        // Drag events\n        case \"drag\":\n        case \"dragend\":\n        case \"dragenter\":\n        case \"dragstart\":\n        case \"dragleave\":\n        case \"dragover\":\n        case \"drop\": {\n            return [DragEvent, mapBubblingEvent];\n        }\n        // Input events\n        case \"input\": {\n            return [InputEvent, mapBubblingEvent];\n        }\n        // Composition events\n        case \"compositionstart\":\n        case \"compositionend\": {\n            return [CompositionEvent, mapBubblingEvent];\n        }\n        // UI events\n        case \"scroll\": {\n            return [UIEvent, mapNonBubblingEvent];\n        }\n        // Touch events\n        case \"touchstart\":\n        case \"touchend\":\n        case \"touchmove\": {\n            return [TouchEvent, mapCancelableTouchEvent];\n        }\n        case \"touchcancel\": {\n            return [TouchEvent, mapNonCancelableTouchEvent];\n        }\n        // Default: base Event constructor\n        default: {\n            return [Event, mapBubblingEvent];\n        }\n    }\n};\n\n/**\n * @template {EventType} T\n * @param {Element} el\n * @param {string | null | undefined | false} selector\n * @param {T} eventType\n * @param {EventInit} [eventInit]\n * @param {TriggerEventOptions} [options={}]\n * @returns {GlobalEventHandlersEventMap[T] | Promise<GlobalEventHandlersEventMap[T]>}\n */\nexport function triggerEvent(el, selector, eventType, eventInit, options = {}) {\n    const errors = [];\n    const target = findElement(el, selector);\n\n    // Error handling\n    if (typeof eventType !== \"string\") {\n        errors.push(\"event type must be a string\");\n    }\n    if (!target) {\n        errors.push(\"cannot find target\");\n    } else if (!options.skipVisibilityCheck && !isVisible(target)) {\n        errors.push(\"target is not visible\");\n    }\n    if (errors.length) {\n        throw new Error(\n            `Cannot trigger event${eventType ? ` \"${eventType}\"` : \"\"}${\n                selector ? ` (with selector \"${selector}\")` : \"\"\n            }: ${errors.join(\" and \")}`\n        );\n    }\n\n    // Actual dispatch\n    const [Constructor, processParams] = getEventConstructor(eventType);\n    const event = new Constructor(eventType, processParams(eventInit));\n    target.dispatchEvent(event);\n\n    if (window.QUnit && QUnit.config.debug) {\n        const group = `%c[${event.type.toUpperCase()}]`;\n        console.groupCollapsed(group, \"color: #b52c9b\");\n        console.log(target, event);\n        console.groupEnd(group, \"color: #b52c9b\");\n    }\n\n    if (options.sync) {\n        return event;\n    } else {\n        return nextTick().then(() => event);\n    }\n}\n\n/**\n * @param {Element} el\n * @param {string | null | undefined | false} selector\n * @param {(EventType | [EventType, EventInit])[]} [eventDefs]\n * @param {TriggerEventOptions} [options={}]\n */\nexport function triggerEvents(el, selector, eventDefs, options = {}) {\n    const events = [...eventDefs].map((eventDef) => {\n        const [eventType, eventInit] = Array.isArray(eventDef) ? eventDef : [eventDef, {}];\n        return triggerEvent(el, selector, eventType, eventInit, options);\n    });\n    if (options.sync) {\n        return events;\n    } else {\n        return nextTick().then(() => events);\n    }\n}\n\n/**\n * Triggers a scroll event on the given target\n *\n * If the target cannot be scrolled or an axis has reached\n * the end of the scrollable area, the event can be transmitted\n * to its nearest parent until it can be triggered\n *\n * @param {Element} target target of the scroll event\n * @param {Object} coordinates\n * @param {number} coordinates.left coordinates to scroll horizontally\n * @param {number} coordinates.top coordinates to scroll vertically\n * @param {boolean} canPropagate states if the scroll can propagate to a scrollable parent\n */\nexport async function triggerScroll(\n    target,\n    coordinates = { left: null, top: null },\n    canPropagate = true\n) {\n    const isScrollable =\n        (target.scrollHeight > target.clientHeight && target.clientHeight > 0) ||\n        (target.scrollWidth > target.clientWidth && target.clientWidth > 0);\n    if (!isScrollable && !canPropagate) {\n        return;\n    }\n    if (isScrollable) {\n        const canScrollFrom = {\n            left:\n                coordinates.left > target.scrollLeft\n                    ? target.scrollLeft + target.clientWidth < target.scrollWidth\n                    : target.scrollLeft > 0,\n            top:\n                coordinates.top > target.scrollTop\n                    ? target.scrollTop + target.clientHeight < target.scrollHeight\n                    : target.scrollTop > 0,\n        };\n        const scrollCoordinates = {};\n        Object.entries(coordinates).forEach(([key, value]) => {\n            if (value !== null && canScrollFrom[key]) {\n                scrollCoordinates[key] = value;\n                delete coordinates[key];\n            }\n        });\n        target.scrollTo(scrollCoordinates);\n        await triggerEvent(target, null, \"scroll\");\n        if (!canPropagate || !Object.entries(coordinates).length) {\n            return;\n        }\n    }\n    target.parentElement\n        ? triggerScroll(target.parentElement, coordinates)\n        : triggerEvent(window, null, \"scroll\");\n    await nextTick();\n}\n\nexport function click(\n    el,\n    selector,\n    { mouseEventInit = {}, skipDisabledCheck = false, skipVisibilityCheck = false } = {}\n) {\n    if (!skipDisabledCheck && el.disabled) {\n        throw new Error(\"Can't click on a disabled button\");\n    }\n    return triggerEvents(\n        el,\n        selector,\n        [\"pointerdown\", \"mousedown\", \"focus\", \"pointerup\", \"mouseup\", [\"click\", mouseEventInit]],\n        { skipVisibilityCheck }\n    );\n}\n\nexport function clickCreate(htmlElement) {\n    if (\n        htmlElement.querySelectorAll(\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_form_button_create\"\n        ).length\n    ) {\n        return click(\n            htmlElement,\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_form_button_create\"\n        );\n    } else if (\n        htmlElement.querySelectorAll(\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_list_button_create\"\n        ).length\n    ) {\n        return click(\n            htmlElement,\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_list_button_create\"\n        );\n    } else {\n        throw new Error(\"No edit button found to be clicked.\");\n    }\n}\n\nexport function clickEdit(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_list_button_edit\").length) {\n        return click(htmlElement, \".o_list_button_edit\");\n    } else {\n        throw new Error(\"No edit button found to be clicked.\");\n    }\n}\n\nexport async function clickSave(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_form_status_indicator\").length) {\n        await mouseEnter(htmlElement, \".o_form_status_indicator\");\n    }\n    if (htmlElement.querySelectorAll(\".o_form_button_save\").length) {\n        return click(htmlElement, \".o_form_button_save\");\n    }\n    const listSaveButtons = htmlElement.querySelectorAll(\".o_list_button_save\");\n    if (listSaveButtons.length) {\n        return listSaveButtons.length >= 2 ? click(listSaveButtons[1]) : click(listSaveButtons[0]);\n    } else {\n        throw new Error(\"No save button found to be clicked.\");\n    }\n}\n\nexport async function clickDiscard(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_form_status_indicator\").length) {\n        await mouseEnter(htmlElement, \".o_form_status_indicator\");\n    }\n    if (htmlElement.querySelectorAll(\".o_form_button_cancel\").length) {\n        return click(htmlElement, \".o_form_button_cancel\");\n    } else if ($(htmlElement).find(\".o_list_button_discard:visible\").length) {\n        return click($(htmlElement).find(\".o_list_button_discard:visible\").get(0));\n    } else {\n        throw new Error(\"No discard button found to be clicked.\");\n    }\n}\n\n/**\n * Trigger pointerenter and mouseenter events on the given target. If no\n * coordinates are given, the event is located by default\n * in the middle of the target to simplify the test process\n *\n * @param {Element} el\n * @param {string} selector\n * @param {Object} coordinates position of the mouseenter event\n */\nexport async function mouseEnter(el, selector, coordinates) {\n    const target = el.querySelector(selector) || el;\n    const atPos = coordinates || {\n        clientX: target.getBoundingClientRect().left + target.getBoundingClientRect().width / 2,\n        clientY: target.getBoundingClientRect().top + target.getBoundingClientRect().height / 2,\n    };\n    return triggerEvents(target, null, [\"pointerenter\", \"mouseenter\"], atPos);\n}\n\n/**\n * Trigger pointerleave and mouseleave events on the given target.\n *\n * @param {Element} el\n * @param {string} selector\n */\nexport async function mouseLeave(el, selector) {\n    const target = el.querySelector(selector) || el;\n    return triggerEvents(target, null, [\"pointerleave\", \"mouseleave\"]);\n}\n\nexport async function editInput(el, selector, value) {\n    const input = findElement(el, selector);\n    if (!(input instanceof HTMLInputElement || input instanceof HTMLTextAreaElement)) {\n        throw new Error(\"Only 'input' and 'textarea' elements can be edited with 'editInput'.\");\n    }\n    if (\n        ![\"text\", \"textarea\", \"email\", \"search\", \"color\", \"number\", \"file\", \"tel\"].includes(\n            input.type\n        )\n    ) {\n        throw new Error(`Type \"${input.type}\" not supported by 'editInput'.`);\n    }\n\n    const eventOpts = {};\n    if (input.type === \"file\") {\n        const files = Array.isArray(value) ? value : [value];\n        const dataTransfer = new DataTransfer();\n        for (const file of files) {\n            if (!(file instanceof File)) {\n                throw new Error(`File input value should be one or several File objects.`);\n            }\n            dataTransfer.items.add(file);\n        }\n        input.files = dataTransfer.files;\n        eventOpts.skipVisibilityCheck = true;\n    } else {\n        input.value = value;\n    }\n\n    await triggerEvents(input, null, [\"input\", \"change\"], eventOpts);\n\n    if (input.type === \"file\") {\n        // Need to wait for the file to be loaded by the input\n        await nextTick();\n        await nextTick();\n    }\n}\n\nexport function editSelect(el, selector, value) {\n    const select = findElement(el, selector);\n    if (select.tagName !== \"SELECT\") {\n        throw new Error(\"Only select tag can be edited with selectInput.\");\n    }\n    select.value = value;\n    return triggerEvent(select, null, \"change\");\n}\n\nexport async function editSelectMenu(el, selector, value) {\n    const dropdown = el.querySelector(selector);\n    await click(dropdown.querySelector(\".dropdown-toggle\"));\n    for (const item of Array.from(dropdown.querySelectorAll(\".dropdown-item\"))) {\n        if (item.textContent === value) {\n            return click(item);\n        }\n    }\n}\n\n/**\n * Triggers an hotkey properly disregarding the operating system.\n *\n * @param {string} hotkey\n * @param {boolean} addOverlayModParts\n * @param {KeyboardEventInit} eventAttrs\n */\nexport async function triggerHotkey(hotkey, addOverlayModParts = false, eventAttrs = {}) {\n    eventAttrs.key = hotkey.split(\"+\").pop();\n\n    if (/shift/i.test(hotkey)) {\n        eventAttrs.shiftKey = true;\n    }\n\n    if (/control/i.test(hotkey)) {\n        if (isMacOS()) {\n            eventAttrs.metaKey = true;\n        } else {\n            eventAttrs.ctrlKey = true;\n        }\n    }\n\n    if (/alt/i.test(hotkey) || addOverlayModParts) {\n        if (isMacOS()) {\n            eventAttrs.ctrlKey = true;\n        } else {\n            eventAttrs.altKey = true;\n        }\n    }\n\n    if (!(\"bubbles\" in eventAttrs)) {\n        eventAttrs.bubbles = true;\n    }\n\n    const [keydownEvent, keyupEvent] = await triggerEvents(\n        document.activeElement,\n        null,\n        [\n            [\"keydown\", eventAttrs],\n            [\"keyup\", eventAttrs],\n        ],\n        { skipVisibilityCheck: true }\n    );\n\n    return { keydownEvent, keyupEvent };\n}\n\nexport function mockDownload(cb) {\n    patchWithCleanup(download, { _download: cb });\n}\n\nexport const hushConsole = Object.create(null);\nfor (const propName of Object.keys(window.console)) {\n    hushConsole[propName] = () => {};\n}\n\nexport function mockSendBeacon(mock) {\n    patchWithCleanup(navigator, {\n        sendBeacon: (url, blob) => {\n            return mock(url, blob) !== false;\n        },\n    });\n}\n\nexport function mockTimeout() {\n    const timeouts = new Map();\n    let currentTime = 0;\n    let id = 1;\n    patchWithCleanup(browser, {\n        setTimeout(fn, delay = 0) {\n            timeouts.set(id, { fn, scheduledFor: delay + currentTime, id });\n            return id++;\n        },\n        clearTimeout(id) {\n            timeouts.delete(id);\n        },\n    });\n    return {\n        execRegisteredTimeouts() {\n            for (const { fn } of timeouts.values()) {\n                fn();\n            }\n            timeouts.clear();\n        },\n        async advanceTime(duration) {\n            // wait here so all microtasktick scheduled in this frame can be\n            // executed and possibly register their own timeout\n            await nextTick();\n            currentTime += duration;\n            for (const { fn, scheduledFor, id } of timeouts.values()) {\n                if (scheduledFor <= currentTime) {\n                    fn();\n                    timeouts.delete(id);\n                }\n            }\n            // wait here to make sure owl can update the UI\n            await nextTick();\n        },\n    };\n}\n\nexport function mockAnimationFrame() {\n    const callbacks = new Map();\n    let currentTime = 0;\n    let id = 1;\n    patchWithCleanup(browser, {\n        requestAnimationFrame(fn) {\n            callbacks.set(id, { fn, scheduledFor: 16 + currentTime, id });\n            return id++;\n        },\n        cancelAnimationFrame(id) {\n            callbacks.delete(id);\n        },\n        performance: { now: () => currentTime },\n    });\n    return {\n        execRegisteredAnimationFrames() {\n            for (const { fn } of callbacks.values()) {\n                fn(currentTime);\n            }\n            callbacks.clear();\n        },\n        async advanceFrame(count = 1) {\n            // wait here so all microtasktick scheduled in this frame can be\n            // executed and possibly register their own timeout\n            await nextTick();\n            currentTime += 16 * count;\n            for (const { fn, scheduledFor, id } of callbacks.values()) {\n                if (scheduledFor <= currentTime) {\n                    fn(currentTime);\n                    callbacks.delete(id);\n                }\n            }\n            // wait here to make sure owl can update the UI\n            await nextTick();\n        },\n    };\n}\n\nexport async function mount(Comp, target, config = {}) {\n    let { props, env } = config;\n    env = env || {};\n    const configuration = {\n        env,\n        templates,\n        test: true,\n        props,\n    };\n    if (env.services && \"localization\" in env.services) {\n        configuration.translateFn = _t;\n    }\n    const app = new App(Comp, configuration);\n    registerCleanup(() => app.destroy());\n    return app.mount(target);\n}\n\nexport function destroy(comp) {\n    comp.__owl__.app.destroy();\n}\n\nexport function findChildren(comp, predicate = (e) => e) {\n    const queue = [];\n    [].unshift.apply(queue, Object.values(comp.__owl__.children));\n\n    while (queue.length > 0) {\n        const curNode = queue.pop();\n        if (predicate(curNode)) {\n            return curNode;\n        }\n        [].unshift.apply(queue, Object.values(curNode.component.__owl__.children));\n    }\n}\n\n// partial replacement of t-ref on component\nexport function useChild() {\n    const node = useComponent().__owl__;\n    const setChild = () => {\n        const componentNode = Object.values(node.children)[0];\n        node.component.child = componentNode.component;\n    };\n    onMounted(setChild);\n    onPatched(setChild);\n}\n\nexport function useLogLifeCycle(logFn, name = \"\") {\n    const component = useComponent();\n    let loggedName = `${component.constructor.name}`;\n    if (name) {\n        loggedName = `${component.constructor.name} ${name}`;\n    }\n    onError(() => {\n        logFn(`onError ${loggedName}`);\n    });\n    onMounted(() => {\n        logFn(`onMounted ${loggedName}`);\n    });\n    onPatched(() => {\n        logFn(`onPatched ${loggedName}`);\n    });\n    onRendered(() => {\n        logFn(`onRendered ${loggedName}`);\n    });\n    onWillDestroy(() => {\n        logFn(`onWillDestroy ${loggedName}`);\n    });\n    onWillPatch(() => {\n        logFn(`onWillPatch ${loggedName}`);\n    });\n    onWillRender(() => {\n        logFn(`onWillRender ${loggedName}`);\n    });\n    onWillStart(() => {\n        logFn(`onWillStart ${loggedName}`);\n    });\n    onWillUnmount(() => {\n        logFn(`onWillUnmount ${loggedName}`);\n    });\n    onWillUpdateProps(() => {\n        logFn(`onWillUpdateProps ${loggedName}`);\n    });\n}\n\n/**\n * Returns the list of nodes containing n2 (included) that do not contain n1.\n *\n * @param {Node} n1\n * @param {Node} n2\n * @returns {Node[]}\n */\nfunction getDifferentParents(n1, n2) {\n    const parents = [n2];\n    while (parents[0].parentNode) {\n        const parent = parents[0].parentNode;\n        if (parent.contains(n1)) {\n            break;\n        }\n        parents.unshift(parent);\n    }\n    return parents;\n}\n\n/**\n * Helper performing a drag and drop sequence.\n *\n * - 'from' is used to determine the element on which the drag will start;\n * - 'target' will determine the element on which the first one will be dropped.\n *\n * The first element will be dragged by its center, and will be dropped on the\n * bottom-right inner pixel of the target element. This behavior covers both\n * cases of appending the first element to the end of a list (toSelector =\n * target list) or moving it at the position of another element, effectively\n * placing the first element before the second (toSelector = other element).\n *\n * A position can be given to drop the first element above, below, or on the\n * side of the second (default is inside, as specified above).\n *\n * Note that only the last event is awaited, since all the others are\n * considered to be synchronous.\n *\n * @param {Element | string} from\n * @param {Element | string} to\n * @param {Position} [position]\n */\nexport async function dragAndDrop(from, to, position) {\n    const { drop } = await drag(from);\n    await drop(to, position);\n}\n\n/**\n * Helper performing a drag.\n *\n * - the 'from' selector is used to determine the element on which the drag will\n *  start;\n * - the 'target' selector will determine the element on which the dragged element will be\n * moved.\n *\n * Returns a drop function\n *\n * @param {Element | string} from\n */\nexport async function drag(from, pointerType = \"mouse\") {\n    const assertIsDragging = (fn, endDrag) => {\n        return {\n            async [fn.name](...args) {\n                if (dragEndReason) {\n                    throw new Error(\n                        `Cannot execute drag helper '${fn.name}': drag sequence has been ended by '${dragEndReason}'.`\n                    );\n                }\n                await fn(...args);\n                if (endDrag) {\n                    dragEndReason = fn.name;\n                }\n            },\n        }[fn.name];\n    };\n\n    const cancel = assertIsDragging(async function cancel() {\n        await triggerEvent(window, null, \"keydown\", { key: \"Escape\" });\n    }, true);\n\n    /**\n     * @param {Element | string} [to]\n     * @param {Position} [position]\n     */\n    const drop = assertIsDragging(async function drop(to, position) {\n        if (to) {\n            await moveTo(to, position);\n        }\n        await triggerEvent(target || source, null, \"pointerup\", targetPosition);\n    }, true);\n\n    /**\n     * @param {Element | string} selector\n     */\n    const getEl = (selector) =>\n        selector instanceof Element ? selector : fixture.querySelector(selector);\n\n    /**\n     * @param {Position} [position]\n     */\n    const getTargetPosition = (position) => {\n        const tRect = target.getBoundingClientRect();\n        const tPos = {\n            clientX: Math.floor(tRect.x),\n            clientY: Math.floor(tRect.y),\n        };\n        if (position && typeof position === \"object\") {\n            // x and y coordinates start from the element's initial coordinates\n            tPos.clientX += position.x || 0;\n            tPos.clientY += position.y || 0;\n        } else {\n            const positions = typeof position === \"string\" ? position.split(\"-\") : [];\n\n            // X position\n            if (positions.includes(\"left\")) {\n                tPos.clientX -= 1;\n            } else if (positions.includes(\"right\")) {\n                tPos.clientX += Math.ceil(tRect.width) + 1;\n            } else {\n                tPos.clientX += Math.floor(tRect.width / 2);\n            }\n\n            // Y position\n            if (positions.includes(\"top\")) {\n                tPos.clientY -= 1;\n            } else if (positions.includes(\"bottom\")) {\n                tPos.clientY += Math.ceil(tRect.height) + 1;\n            } else {\n                tPos.clientY += Math.floor(tRect.height / 2);\n            }\n        }\n        return tPos;\n    };\n\n    /**\n     * @param {Element | string} [to]\n     * @param {Position} [position]\n     */\n    const moveTo = assertIsDragging(async function moveTo(to, position) {\n        target = getEl(to);\n        if (!target) {\n            return;\n        }\n\n        // Recompute target position\n        targetPosition = getTargetPosition(position);\n\n        // Move, enter and drop the element on the target\n        await triggerEvent(source, null, \"pointermove\", targetPosition);\n\n        // \"pointerenter\" is fired on every parent of `target` that do not contain\n        // `from` (typically: different parent lists).\n        for (const parent of getDifferentParents(source, target)) {\n            triggerEvent(parent, null, \"pointerenter\", targetPosition);\n        }\n        await nextTick();\n\n        return dragHelpers;\n    }, false);\n\n    const dragHelpers = { cancel, drop, moveTo };\n    const fixture = getFixture();\n\n    const source = getEl(from instanceof Element ? from : fixture.querySelector(from));\n    const sourceRect = source.getBoundingClientRect();\n\n    let dragEndReason = null;\n    let target;\n    let targetPosition;\n\n    // Pointer down on main target\n    await triggerEvent(source, null, \"pointerdown\", {\n        pointerType,\n        clientX: sourceRect.x + sourceRect.width / 2,\n        clientY: sourceRect.y + sourceRect.height / 2,\n    });\n\n    return dragHelpers;\n}\n\nexport async function clickDropdown(target, fieldName) {\n    const dropdownInput = target.querySelector(`[name='${fieldName}'] .dropdown input`);\n    dropdownInput.focus();\n    await nextTick();\n    await click(dropdownInput);\n}\n\nexport async function clickOpenedDropdownItem(target, fieldName, itemContent) {\n    const dropdowns = target.querySelectorAll(`[name='${fieldName}'] .dropdown .dropdown-menu`);\n    if (dropdowns.length === 0) {\n        throw new Error(`No dropdown found for field ${fieldName}`);\n    } else if (dropdowns.length > 1) {\n        throw new Error(`Found ${dropdowns.length} dropdowns for field ${fieldName}`);\n    }\n    const dropdownItems = dropdowns[0].querySelectorAll(\"li\");\n    const indexToClick = Array.from(dropdownItems)\n        .map((html) => html.textContent)\n        .indexOf(itemContent);\n    if (indexToClick === -1) {\n        throw new Error(`The element '${itemContent}' does not exist in the dropdown`);\n    }\n    await click(dropdownItems[indexToClick]);\n}\n\nexport async function selectDropdownItem(target, fieldName, itemContent) {\n    await clickDropdown(target, fieldName);\n    await clickOpenedDropdownItem(target, fieldName, itemContent);\n}\n\nexport function getNodesTextContent(nodes) {\n    return Array.from(nodes).map((n) => n.textContent);\n}\n\n/**\n * Click to open the dropdown on a many2one\n */\nexport async function clickOpenM2ODropdown(el, fieldName, selector) {\n    const m2oSelector = `${selector || \"\"} .o_field_many2one[name=${fieldName}] input`;\n    const matches = el.querySelectorAll(m2oSelector);\n    if (matches.length !== 1) {\n        throw new Error(\n            `cannot open m2o: selector ${selector} has been found ${matches.length} instead of 1`\n        );\n    }\n\n    await click(matches[0]);\n    return matches[0];\n}\n\n/**\n * Click on the active (highlighted) selection in a m2o dropdown.\n */\n// TO FIX\nexport async function clickM2OHighlightedItem(el, fieldName, selector) {\n    const m2oSelector = `${selector || \"\"} .o_field_many2one[name=${fieldName}] input`;\n    // const $dropdown = $(m2oSelector).autocomplete('widget');\n    const matches = el.querySelectorAll(m2oSelector);\n    if (matches.length !== 1) {\n        throw new Error(\n            `cannot open m2o: selector ${selector} has been found ${matches.length} instead of 1`\n        );\n    }\n    // clicking on an li (no matter which one), will select the focussed one\n    return click(matches[0].parentElement.querySelector(\"li\"));\n}\n\n// X2Many\nexport async function addRow(target, selector) {\n    await click(target.querySelector(`${selector ? selector : \"\"} .o_field_x2many_list_row_add a`));\n}\n\nexport async function removeRow(target, index) {\n    await click(target.querySelectorAll(\".o_list_record_remove\")[index]);\n}\n", "/* @odoo-module */\n\nimport { isVisible } from \"@web/core/utils/ui\";\nimport { registerCleanup } from \"@web/../tests/helpers/cleanup\";\nimport {\n    click as webClick,\n    getFixture,\n    makeDeferred,\n    triggerEvents as webTriggerEvents,\n} from \"@web/../tests/helpers/utils\";\n\n/**\n * Create a file object, which can be used for drag-and-drop.\n *\n * @param {Object} data\n * @param {string} data.name\n * @param {string} data.content\n * @param {string} data.contentType\n * @returns {Promise<Object>} resolved with file created\n */\nexport function createFile(data) {\n    // Note: this is only supported by Chrome, and does not work in Incognito mode\n    return new Promise(function (resolve, reject) {\n        var requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        if (!requestFileSystem) {\n            throw new Error(\"FileSystem API is not supported\");\n        }\n        requestFileSystem(window.TEMPORARY, 1024 * 1024, function (fileSystem) {\n            fileSystem.root.getFile(data.name, { create: true }, function (fileEntry) {\n                fileEntry.createWriter(function (fileWriter) {\n                    fileWriter.onwriteend = function (e) {\n                        fileSystem.root.getFile(data.name, {}, function (fileEntry) {\n                            fileEntry.file(function (file) {\n                                resolve(file);\n                            });\n                        });\n                    };\n                    fileWriter.write(new Blob([data.content], { type: data.contentType }));\n                });\n            });\n        });\n    });\n}\n\n/**\n * Create a fake object 'dataTransfer', linked to some files,\n * which is passed to drag and drop events.\n *\n * @param {Object[]} files\n * @returns {Object}\n */\nfunction createFakeDataTransfer(files) {\n    return {\n        dropEffect: \"all\",\n        effectAllowed: \"all\",\n        files,\n        items: [],\n        types: [\"Files\"],\n    };\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then clicks on it.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options] forwarded to `contains`\n * @param {boolean} [options.shiftKey]\n */\nexport async function click(selector, options = {}) {\n    const { shiftKey } = options;\n    delete options.shiftKey;\n    await contains(selector, { click: { shiftKey }, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then dragenters `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dragenterFiles(selector, files, options) {\n    await contains(selector, { dragenterFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then dragovers `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dragoverFiles(selector, files, options) {\n    await contains(selector, { dragoverFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then drops `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dropFiles(selector, files, options) {\n    await contains(selector, { dropFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then inputs `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function inputFiles(selector, files, options) {\n    await contains(selector, { inputFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then pastes `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function pasteFiles(selector, files, options) {\n    await contains(selector, { pasteFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then focuses on it.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function focus(selector, options) {\n    await contains(selector, { setFocus: true, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then inserts the given `content`.\n *\n * @param {string} selector\n * @param {string} content\n * @param {ContainsOptions} [options] forwarded to `contains`\n * @param {boolean} [options.replace=false]\n */\nexport async function insertText(selector, content, options = {}) {\n    const { replace = false } = options;\n    delete options.replace;\n    await contains(selector, { ...options, insertText: { content, replace } });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then sets its `scrollTop` to the given value.\n *\n * @param {string} selector\n * @param {number|\"bottom\"} scrollTop\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function scroll(selector, scrollTop, options) {\n    await contains(selector, { setScroll: scrollTop, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then triggers `event` on it.\n *\n * @param {string} selector\n * @param {(import(\"@web/../tests/helpers/utils\").EventType|[import(\"@web/../tests/helpers/utils\").EventType, EventInit])[]} events\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function triggerEvents(selector, events, options) {\n    await contains(selector, { triggerEvents: events, ...options });\n}\n\nfunction log(ok, message) {\n    if (window.QUnit) {\n        QUnit.assert.ok(ok, message);\n    } else {\n        if (ok) {\n            console.log(message);\n        } else {\n            console.error(message);\n        }\n    }\n}\n\nlet hasUsedContainsPositively = false;\nif (window.QUnit) {\n    QUnit.testStart(() => (hasUsedContainsPositively = false));\n}\n/**\n * @typedef {[string, ContainsOptions]} ContainsTuple tuple representing params of the contains\n *  function, where the first element is the selector, and the second element is the options param.\n * @typedef {Object} ContainsOptions\n * @property {ContainsTuple} [after] if provided, the found element(s) must be after the element\n *  matched by this param.\n * @property {ContainsTuple} [before] if provided, the found element(s) must be before the element\n *  matched by this param.\n * @property {Object} [click] if provided, clicks on the first found element\n * @property {ContainsTuple|ContainsTuple[]} [contains] if provided, the found element(s) must\n *  contain the provided sub-elements.\n * @property {number} [count=1] numbers of elements to be found to declare the contains check\n *  as successful. Elements are counted after applying all other filters.\n * @property {Object[]} [dragenterFiles] if provided, dragenters the given files on the found element\n * @property {Object[]} [dragoverFiles] if provided, dragovers the given files on the found element\n * @property {Object[]} [dropFiles] if provided, drops the given files on the found element\n * @property {Object[]} [inputFiles] if provided, inputs the given files on the found element\n * @property {{content:string, replace:boolean}} [insertText] if provided, adds to (or replace) the\n *  value of the first found element by the given content.\n * @property {ContainsTuple} [parent] if provided, the found element(s) must have as\n *  parent the node matching the parent parameter.\n * @property {Object[]} [pasteFiles] if provided, pastes the given files on the found element\n * @property {number|\"bottom\"} [scroll] if provided, the scrollTop of the found element(s)\n *  must match.\n *  Note: when using one of the scrollTop options, it is advised to ensure the height is not going\n *  to change soon, by checking with a preceding contains that all the expected elements are in DOM.\n * @property {boolean} [setFocus] if provided, focuses the first found element.\n * @property {boolean} [shadowRoot] if provided, targets the shadowRoot of the found elements.\n * @property {number|\"bottom\"} [setScroll] if provided, sets the scrollTop on the first found\n *  element.\n * @property {HTMLElement} [target=getFixture()]\n * @property {string[]} [triggerEvents] if provided, triggers the given events on the found element\n * @property {string} [text] if provided, the textContent of the found element(s) or one of their\n *  descendants must match. Use `textContent` option for a match on the found element(s) only.\n * @property {string} [textContent] if provided, the textContent of the found element(s) must match.\n *  Prefer `text` option for a match on the found element(s) or any of their descendants, usually\n *  allowing for a simpler and less specific selector.\n * @property {string} [value] if provided, the input value of the found element(s) must match.\n *  Note: value changes are not observed directly, another mutation must happen to catch them.\n * @property {boolean} [visible] if provided, the found element(s) must be (in)visible\n */\nclass Contains {\n    /**\n     * @param {string} selector\n     * @param {ContainsOptions} [options={}]\n     */\n    constructor(selector, options = {}) {\n        this.selector = selector;\n        this.options = options;\n        this.options.count ??= 1;\n        this.options.targetParam = this.options.target;\n        this.options.target ??= getFixture();\n        let selectorMessage = `${this.options.count} of \"${this.selector}\"`;\n        if (this.options.visible !== undefined) {\n            selectorMessage = `${selectorMessage} ${\n                this.options.visible ? \"visible\" : \"invisible\"\n            }`;\n        }\n        if (this.options.targetParam) {\n            selectorMessage = `${selectorMessage} inside a specific target`;\n        }\n        if (this.options.parent) {\n            selectorMessage = `${selectorMessage} inside a specific parent`;\n        }\n        if (this.options.contains) {\n            selectorMessage = `${selectorMessage} with a specified sub-contains`;\n        }\n        if (this.options.text !== undefined) {\n            selectorMessage = `${selectorMessage} with text \"${this.options.text}\"`;\n        }\n        if (this.options.textContent !== undefined) {\n            selectorMessage = `${selectorMessage} with textContent \"${this.options.textContent}\"`;\n        }\n        if (this.options.value !== undefined) {\n            selectorMessage = `${selectorMessage} with value \"${this.options.value}\"`;\n        }\n        if (this.options.scroll !== undefined) {\n            selectorMessage = `${selectorMessage} with scroll \"${this.options.scroll}\"`;\n        }\n        if (this.options.after !== undefined) {\n            selectorMessage = `${selectorMessage} after a specified element`;\n        }\n        if (this.options.before !== undefined) {\n            selectorMessage = `${selectorMessage} before a specified element`;\n        }\n        this.selectorMessage = selectorMessage;\n        if (this.options.contains && !Array.isArray(this.options.contains[0])) {\n            this.options.contains = [this.options.contains];\n        }\n        if (this.options.count) {\n            hasUsedContainsPositively = true;\n        } else if (!hasUsedContainsPositively) {\n            throw new Error(\n                `Starting a test with \"contains\" of count 0 for selector \"${this.selector}\" is useless because it might immediately resolve. Start the test by checking that an expected element actually exists.`\n            );\n        }\n        /** @type {string} */\n        this.successMessage = undefined;\n        /** @type {function} */\n        this.executeError = undefined;\n    }\n\n    /**\n     * Starts this contains check, either immediately resolving if there is a\n     * match, or registering appropriate listeners and waiting until there is a\n     * match or a timeout (resolving or rejecting respectively).\n     *\n     * Success or failure messages will be logged with QUnit as well.\n     *\n     * @returns {Promise}\n     */\n    run() {\n        this.done = false;\n        this.def = makeDeferred();\n        this.scrollListeners = new Set();\n        this.onScroll = () => this.runOnce(\"after scroll\");\n        if (!this.runOnce(\"immediately\")) {\n            this.timer = setTimeout(\n                () => this.runOnce(\"Timeout of 5 seconds\", { crashOnFail: true }),\n                5000\n            );\n            this.observer = new MutationObserver((mutations) => {\n                try {\n                    this.runOnce(\"after mutations\");\n                } catch (e) {\n                    this.def.reject(e); // prevents infinite loop in case of programming error\n                }\n            });\n            this.observer.observe(this.options.target, {\n                attributes: true,\n                childList: true,\n                subtree: true,\n            });\n            registerCleanup(() => {\n                if (!this.done) {\n                    this.runOnce(\"Test ended\", { crashOnFail: true });\n                }\n            });\n        }\n        return this.def;\n    }\n\n    /**\n     * Runs this contains check once, immediately returning the result (or\n     * undefined), and possibly resolving or rejecting the main promise\n     * (and printing QUnit log) depending on options.\n     * If undefined is returned it means the check was not successful.\n     *\n     * @param {string} whenMessage\n     * @param {Object} [options={}]\n     * @param {boolean} [options.crashOnFail=false]\n     * @param {boolean} [options.executeOnSuccess=true]\n     * @returns {HTMLElement[]|undefined}\n     */\n    runOnce(whenMessage, { crashOnFail = false, executeOnSuccess = true } = {}) {\n        const res = this.select();\n        if (res?.length === this.options.count || crashOnFail) {\n            // clean before doing anything else to avoid infinite loop due to side effects\n            this.observer?.disconnect();\n            clearTimeout(this.timer);\n            for (const el of this.scrollListeners ?? []) {\n                el.removeEventListener(\"scroll\", this.onScroll);\n            }\n            this.done = true;\n        }\n        if (res?.length === this.options.count) {\n            this.successMessage = `Found ${this.selectorMessage} (${whenMessage})`;\n            if (executeOnSuccess) {\n                this.executeAction(res[0]);\n            }\n            return res;\n        } else {\n            this.executeError = () => {\n                let message = `Failed to find ${this.selectorMessage} (${whenMessage}).`;\n                message = res\n                    ? `${message} Found ${res.length} instead.`\n                    : `${message} Parent not found.`;\n                if (this.parentContains) {\n                    if (this.parentContains.successMessage) {\n                        log(true, this.parentContains.successMessage);\n                    } else {\n                        this.parentContains.executeError();\n                    }\n                }\n                log(false, message);\n                this.def?.reject(new Error(message));\n                for (const childContains of this.childrenContains || []) {\n                    if (childContains.successMessage) {\n                        log(true, childContains.successMessage);\n                    } else {\n                        childContains.executeError();\n                    }\n                }\n            };\n            if (crashOnFail) {\n                this.executeError();\n            }\n        }\n    }\n\n    /**\n     * Executes the action(s) given to this constructor on the found element,\n     * prints the success messages, and resolves the main deferred.\n\n     * @param {HTMLElement} el\n     */\n    executeAction(el) {\n        let message = this.successMessage;\n        if (this.options.click) {\n            message = `${message} and clicked it`;\n            webClick(el, undefined, {\n                mouseEventInit: this.options.click,\n                skipDisabledCheck: true,\n                skipVisibilityCheck: true,\n            });\n        }\n        if (this.options.dragenterFiles) {\n            message = `${message} and dragentered ${this.options.dragenterFiles.length} file(s)`;\n            const ev = new Event(\"dragenter\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dragenterFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.dragoverFiles) {\n            message = `${message} and dragovered ${this.options.dragoverFiles.length} file(s)`;\n            const ev = new Event(\"dragover\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dragoverFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.dropFiles) {\n            message = `${message} and dropped ${this.options.dropFiles.length} file(s)`;\n            const ev = new Event(\"drop\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dropFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.inputFiles) {\n            message = `${message} and inputted ${this.options.inputFiles.length} file(s)`;\n            // could not use _createFakeDataTransfer as el.files assignation will only\n            // work with a real FileList object.\n            const dataTransfer = new window.DataTransfer();\n            for (const file of this.options.inputFiles) {\n                dataTransfer.items.add(file);\n            }\n            el.files = dataTransfer.files;\n            /**\n             * Changing files programatically is not supposed to trigger the event but\n             * it does in Chrome versions before 73 (which is on runbot), so in that\n             * case there is no need to make a manual dispatch, because it would lead to\n             * the files being added twice.\n             */\n            const versionRaw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n            const chromeVersion = versionRaw ? parseInt(versionRaw[2], 10) : false;\n            if (!chromeVersion || chromeVersion >= 73) {\n                el.dispatchEvent(new Event(\"change\"));\n            }\n        }\n        if (this.options.insertText !== undefined) {\n            message = `${message} and inserted text \"${this.options.insertText.content}\" (replace: ${this.options.insertText.replace})`;\n            el.focus();\n            if (this.options.insertText.replace) {\n                el.value = \"\";\n                el.dispatchEvent(new window.KeyboardEvent(\"keydown\", { key: \"Backspace\" }));\n                el.dispatchEvent(new window.KeyboardEvent(\"keyup\", { key: \"Backspace\" }));\n                el.dispatchEvent(new window.InputEvent(\"input\"));\n                el.dispatchEvent(new window.InputEvent(\"change\"));\n            }\n            for (const char of this.options.insertText.content) {\n                el.value += char;\n                el.dispatchEvent(new window.KeyboardEvent(\"keydown\", { key: char }));\n                el.dispatchEvent(new window.KeyboardEvent(\"keyup\", { key: char }));\n                el.dispatchEvent(new window.InputEvent(\"input\"));\n                el.dispatchEvent(new window.InputEvent(\"change\"));\n            }\n        }\n        if (this.options.pasteFiles) {\n            message = `${message} and pasted ${this.options.pasteFiles.length} file(s)`;\n            const ev = new Event(\"paste\", { bubbles: true });\n            Object.defineProperty(ev, \"clipboardData\", {\n                value: createFakeDataTransfer(this.options.pasteFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.setFocus) {\n            message = `${message} and focused it`;\n            el.focus();\n        }\n        if (this.options.setScroll !== undefined) {\n            message = `${message} and set scroll to \"${this.options.setScroll}\"`;\n            el.scrollTop =\n                this.options.setScroll === \"bottom\" ? el.scrollHeight : this.options.setScroll;\n        }\n        if (this.options.triggerEvents) {\n            message = `${message} and triggered \"${this.options.triggerEvents.join(\", \")}\" events`;\n            webTriggerEvents(el, null, this.options.triggerEvents, {\n                skipVisibilityCheck: true,\n            });\n        }\n        if (this.parentContains) {\n            log(true, this.parentContains.successMessage);\n        }\n        log(true, message);\n        for (const childContains of this.childrenContains) {\n            log(true, childContains.successMessage);\n        }\n        this.def?.resolve();\n    }\n\n    /**\n     * Returns the found element(s) according to this constructor setup.\n     * If undefined is returned it means the parent cannot be found\n     *\n     * @returns {HTMLElement[]|undefined}\n     */\n    select() {\n        const target = this.selectParent();\n        if (!target) {\n            return;\n        }\n        const baseRes = [...target.querySelectorAll(this.selector)]\n            .map((el) => (this.options.shadowRoot ? el.shadowRoot : el))\n            .filter((el) => el);\n        /** @type {Contains[]} */\n        this.childrenContains = [];\n        const res = baseRes.filter((el, currentIndex) => {\n            let condition =\n                (this.options.textContent === undefined ||\n                    el.textContent.trim() === this.options.textContent) &&\n                (this.options.value === undefined || el.value === this.options.value) &&\n                (this.options.scroll === undefined ||\n                    (this.options.scroll === \"bottom\"\n                        ? Math.abs(el.scrollHeight - el.clientHeight - el.scrollTop) <= 1\n                        : Math.abs(el.scrollTop - this.options.scroll) <= 1));\n            if (condition && this.options.text !== undefined) {\n                if (\n                    el.textContent.trim() !== this.options.text &&\n                    [...el.querySelectorAll(\"*\")].every(\n                        (el) => el.textContent.trim() !== this.options.text\n                    )\n                ) {\n                    condition = false;\n                }\n            }\n            if (condition && this.options.contains) {\n                for (const param of this.options.contains) {\n                    const childContains = new Contains(param[0], { ...param[1], target: el });\n                    if (\n                        !childContains.runOnce(`as child of el ${currentIndex + 1})`, {\n                            executeOnSuccess: false,\n                        })\n                    ) {\n                        condition = false;\n                    }\n                    this.childrenContains.push(childContains);\n                }\n            }\n            if (condition && this.options.visible !== undefined) {\n                if (isVisible(el) !== this.options.visible) {\n                    condition = false;\n                }\n            }\n            if (condition && this.options.after) {\n                const afterContains = new Contains(this.options.after[0], {\n                    ...this.options.after[1],\n                    target,\n                });\n                const afterEl = afterContains.runOnce(`as \"after\"`, {\n                    executeOnSuccess: false,\n                })?.[0];\n                if (\n                    !afterEl ||\n                    !(el.compareDocumentPosition(afterEl) & Node.DOCUMENT_POSITION_PRECEDING)\n                ) {\n                    condition = false;\n                }\n                this.childrenContains.push(afterContains);\n            }\n            if (condition && this.options.before) {\n                const beforeContains = new Contains(this.options.before[0], {\n                    ...this.options.before[1],\n                    target,\n                });\n                const beforeEl = beforeContains.runOnce(`as \"before\"`, {\n                    executeOnSuccess: false,\n                })?.[0];\n                if (\n                    !beforeEl ||\n                    !(el.compareDocumentPosition(beforeEl) & Node.DOCUMENT_POSITION_FOLLOWING)\n                ) {\n                    condition = false;\n                }\n                this.childrenContains.push(beforeContains);\n            }\n            return condition;\n        });\n        if (\n            this.options.scroll !== undefined &&\n            this.scrollListeners &&\n            baseRes.length === this.options.count &&\n            res.length !== this.options.count\n        ) {\n            for (const el of baseRes) {\n                if (!this.scrollListeners.has(el)) {\n                    this.scrollListeners.add(el);\n                    el.addEventListener(\"scroll\", this.onScroll);\n                }\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Returns the found element that should act as the target (parent) for the\n     * main selector.\n     * If undefined is returned it means the parent cannot be found.\n     *\n     * @returns {HTMLElement|undefined}\n     */\n    selectParent() {\n        if (this.options.parent) {\n            this.parentContains = new Contains(this.options.parent[0], {\n                ...this.options.parent[1],\n                target: this.options.target,\n            });\n            return this.parentContains.runOnce(`as parent`, { executeOnSuccess: false })?.[0];\n        }\n        return this.options.target;\n    }\n}\n\n/**\n * Waits until `count` elements matching the given `selector` are present in\n * `options.target`.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options]\n * @returns {Promise}\n */\nexport async function contains(selector, options) {\n    await new Contains(selector, options).run();\n}\n\nconst stepState = {\n    expectedSteps: null,\n    deferred: null,\n    timeout: null,\n    currentSteps: [],\n\n    clear() {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n        this.deferred = null;\n        this.currentSteps = [];\n        this.expectedSteps = null;\n    },\n\n    check({ crashOnFail = false } = {}) {\n        const success =\n            this.expectedSteps.length === this.currentSteps.length &&\n            this.expectedSteps.every((s, i) => s === this.currentSteps[i]);\n        if (!success && !crashOnFail) {\n            return;\n        }\n        QUnit.config.current.assert.verifySteps(this.expectedSteps);\n        if (success) {\n            this.deferred.resolve();\n        } else {\n            this.deferred.reject(new Error(\"Steps do not match.\"));\n        }\n        this.clear();\n    },\n};\n\nif (window.QUnit) {\n    QUnit.testStart(() =>\n        registerCleanup(() => {\n            if (stepState.expectedSteps) {\n                stepState.check({ crashOnFail: true });\n            } else {\n                stepState.clear();\n            }\n        })\n    );\n}\n\n/**\n * Indicate the completion of a test step. This step must then be verified by\n * calling `assertSteps`.\n *\n * @param {string} step\n */\nexport function step(step) {\n    stepState.currentSteps.push(step);\n    QUnit.config.current.assert.step(step);\n    if (stepState.expectedSteps) {\n        stepState.check();\n    }\n}\n\n/**\n * Wait for the given steps to be executed or for the timeout to be reached.\n *\n * @param {string[]} steps\n */\nexport function assertSteps(steps) {\n    if (stepState.expectedSteps) {\n        stepState.check({ crashOnFail: true });\n    }\n    stepState.expectedSteps = steps;\n    stepState.deferred = makeDeferred();\n    stepState.timeout = setTimeout(() => stepState.check({ crashOnFail: true }), 2000);\n    stepState.check();\n    return stepState.deferred;\n}\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"discuss_channel_as_guest_tour.js\", {\n        test: true,\n        steps: () => [\n            {\n                content: \"Channel secret token has been hidden on welcome page\",\n                trigger: \".o-mail-WelcomePage\",\n                run() {\n                    if (!window.location.pathname.startsWith(\"/discuss/channel\")) {\n                        console.error(\"Channel secret token is still present in URL.\");\n                    }\n                },\n            },\n            {\n                content: \"Click join\",\n                trigger: \"button[title='Join Channel']\",\n                extraTrigger: \".o-mail-Thread\",\n            },\n            {\n                content: \"Check that we are on channel page\",\n                trigger: \".o-mail-Thread\",\n                run() {},\n            },\n        ],\n    });\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { click, contains, createFile, inputFiles } from \"@web/../tests/utils\";\n\nregistry.category(\"web_tour.tours\").add(\"discuss_channel_public_tour.js\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o-mail-DiscussPublic\",\n            extraTrigger: \".o-mail-Thread\",\n            run() {},\n        },\n        {\n            content: \"Check that we are on channel page\",\n            trigger: \".o-mail-Thread\",\n            run() {\n                if (!window.location.pathname.startsWith(\"/discuss/channel\")) {\n                    console.error(\"Channel secret token is still present in URL.\");\n                }\n                const { missing, failed, unloaded } = odoo.loader.findErrors();\n                if ([missing, failed, unloaded].some((arr) => arr.length)) {\n                    console.error(\n                        \"Couldn't load all JS modules.\",\n                        JSON.stringify({ missing, failed, unloaded })\n                    );\n                }\n                document.body.classList.add(\"o_discuss_channel_public_modules_loaded\");\n            },\n            extraTrigger: \".o_discuss_channel_public_modules_loaded\",\n        },\n        {\n            content: \"Wait for all modules loaded check in previous step\",\n            trigger: \".o_discuss_channel_public_modules_loaded\",\n            run() {},\n        },\n        {\n            content: \"Write something in composer\",\n            trigger: \".o-mail-Composer-input\",\n            run: \"text cheese\",\n        },\n        {\n            content: \"Add one file in composer\",\n            trigger: \".o-mail-Composer button[aria-label='Attach files']\",\n            async run() {\n                await inputFiles(\".o-mail-Composer-coreMain .o_input_file\", [\n                    await createFile({\n                        content: \"hello, world\",\n                        contentType: \"text/plain\",\n                        name: \"text.txt\",\n                    }),\n                ]);\n            },\n        },\n        {\n            content: \"Check the earlier provided attachment is listed\",\n            trigger: '.o-mail-AttachmentCard[title=\"text.txt\"]',\n            extra_trigger: \".o-mail-AttachmentCard:not(.o-isUploading)\", // waiting the attachment to be uploaded\n            run() {},\n        },\n        {\n            content: \"Send message\",\n            trigger: \".o-mail-Composer-send:enabled\",\n        },\n        {\n            content: \"Check message is shown\",\n            trigger: '.o-mail-Message-body:contains(\"cheese\")',\n            run() {},\n        },\n        {\n            content: \"Check message contains the attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            run() {},\n        },\n        {\n            content: \"Click on more menu\",\n            trigger: \".o-mail-Message [title='Expand']\",\n        },\n        {\n            content: \"Click on edit\",\n            trigger: \".o-mail-Message [title='Edit']\",\n        },\n        {\n            content: \"Edit message\",\n            trigger: \".o-mail-Message .o-mail-Composer-input\",\n            run: \"text vegetables\",\n        },\n        {\n            content: \"Add one more file in composer\",\n            trigger: \".o-mail-Message .o-mail-Composer button[aria-label='Attach files']\",\n            async run() {\n                inputFiles(\".o-mail-Message .o-mail-Composer-coreMain .o_input_file\", [\n                    await createFile({\n                        content: \"hello 2\",\n                        contentType: \"text/plain\",\n                        name: \"extra.txt\",\n                    }),\n                ]);\n            },\n        },\n        {\n            content: \"Check the earlier provided extra attachment is listed\",\n            trigger: '.o-mail-Message .o-mail-Composer .o-mail-AttachmentCard[title=\"extra.txt\"]',\n            extra_trigger:\n                \".o-mail-Message .o-mail-Composer .o-mail-AttachmentCard:not(.o-isUploading)\", // waiting the attachment to be uploaded\n            run() {},\n        },\n        {\n            content: \"Save edited message\",\n            trigger: \".o-mail-Message a:contains(save)\",\n        },\n        {\n            content: \"Check message is edited\",\n            trigger: '.o-mail-Message-body:contains(\"vegetables\")',\n            run() {},\n        },\n        {\n            content: \"Check edited message contains the first attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            run() {},\n        },\n        {\n            content: \"Check edited message contains the extra attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"extra.txt\")',\n            async run() {\n                await click(\".o-mail-AttachmentCard-unlink\", {\n                    parent: [\".o-mail-AttachmentCard\", { text: \"extra.txt\" }],\n                });\n                await click(\".btn\", { text: \"Ok\", parent: [\".modal\", { text: \"Confirmation\" }] });\n                await contains(\".o-mail-AttachmentCard\", { text: \"extra.txt\", count: 0 });\n            },\n        },\n        {\n            content: \"Open search panel\",\n            trigger: \"button[title='Search Messages']\",\n        },\n        {\n            content: \"Search for the attachment name\",\n            trigger: \".o_searchview_input\",\n            run: \"text text.txt\",\n        },\n        {\n            content: \"Trigger the search\",\n            trigger: \"button[aria-label='Search button']\",\n        },\n        {\n            content: \"Check that searched message contains the attachment\",\n            trigger:\n                '.o-mail-SearchMessagesPanel .o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            run() {},\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { _t } from \"@web/core/l10n/translation\";\nimport { registry } from \"@web/core/registry\";\n\nimport { markup } from \"@odoo/owl\";\n\nregistry.category(\"web_tour.tours\").add(\"discuss_channel_tour\", {\n    url: \"/web#action=mail.action_discuss\",\n    sequence: 80,\n    steps: () => [\n        {\n            trigger: \".o-mail-DiscussSidebarCategory-channel .o-mail-DiscussSidebarCategory-add\",\n            content: markup(\n                _t(\n                    \"<p>Channels make it easy to organize information across different topics and groups.</p> <p>Try to <b>create your first channel</b> (e.g. sales, marketing, product XYZ, after work party, etc).</p>\"\n                )\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o-discuss-ChannelSelector input\",\n            content: markup(_t(\"<p>Create a channel here.</p>\")),\n            position: \"bottom\",\n            auto: true,\n            run: function (actions) {\n                var t = new Date().getTime();\n                actions.text(\"SomeChannel_\" + t, this.$anchor);\n            },\n        },\n        {\n            trigger: \".o-discuss-ChannelSelector-list\",\n            extra_trigger: \".o-discuss-ChannelSelector-suggestion\",\n            content: markup(_t(\"<p>Create a public or private channel.</p>\")),\n            position: \"right\",\n            run() {\n                document.querySelector(\".o-discuss-ChannelSelector-suggestion\").click();\n            },\n        },\n        {\n            trigger: \".o-mail-Composer-input\",\n            content: markup(\n                _t(\n                    \"<p><b>Write a message</b> to the members of the channel here.</p> <p>You can notify someone with <i>'@'</i> or link another channel with <i>'#'</i>. Start your message with <i>'/'</i> to get the list of possible commands.</p>\"\n                )\n            ),\n            position: \"top\",\n            width: 350,\n            run: function (actions) {\n                var t = new Date().getTime();\n                actions.text(\"SomeText_\" + t, this.$anchor);\n            },\n        },\n        {\n            trigger: \".o-mail-Composer-send:enabled\",\n            content: _t(\"Post your message on the thread\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o-mail-Message\",\n            content: _t(\"Click on your message\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o-mail-Message [title='Expand']\",\n            content: _t(\"Expand options\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o-mail-Message [title='Mark as Todo']\",\n            content: markup(\n                _t(\"Messages can be <b>starred</b> to remind you to check back later.\")\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \"button:contains(Starred)\",\n            content: _t(\n                \"Once a message has been starred, you can come back and review it at any time here.\"\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o-mail-DiscussSidebarCategory-chat .o-mail-DiscussSidebarCategory-add\",\n            content: markup(\n                _t(\n                    \"<p><b>Chat with coworkers</b> in real-time using direct messages.</p><p><i>You might need to invite users from the Settings app first.</i></p>\"\n                )\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o-discuss-ChannelSelector\",\n            auto: true,\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_activity_schedule_from_chatter\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"button:contains('Activities')\",\n        },\n        {\n            trigger: \"input[id*='activity_type_id']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".dropdown-item:contains('Call')\",\n        },\n        {\n            extra_trigger: \"button:contains('Schedule')\",\n            trigger: \"input[id*='activity_type_id']\",\n            run: function (action_helper) {\n                setTimeout(() => action_helper.click(), 100);\n            },\n        },\n        {\n            trigger: \".dropdown-item:contains('To-Do')\",\n        },\n        {\n            trigger: \"div[name='summary'] input\",\n            run: \"text Play Mario Party\",\n        },\n        {\n            trigger: \"button:contains('Schedule')\",\n        },\n        {\n            trigger: \".o-mail-Activity:contains('Play Mario Party')\",\n        },\n        {\n            trigger: \"button:contains('Activities')\",\n        },\n        {\n            trigger: \"div[name='summary'] input\",\n            run: \"text Play Mario Kart\",\n        },\n        {\n            trigger: \"button:contains('Mark as Done')\",\n        },\n        {\n            trigger: \".o-mail-Message:contains('Play Mario Kart')\",\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { contains, createFile, inputFiles } from \"@web/../tests/utils\";\n\n/**\n * This tour depends on data created by python test in charge of launching it.\n * It is not intended to work when launched from interface. It is needed to test\n * an action (action manager) which is not possible to test with QUnit.\n * @see mail/tests/test_mail_composer.py\n */\nregistry.category(\"web_tour.tours\").add(\"mail/static/tests/tours/mail_composer_test_tour.js\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Wait for the chatter to be fully loaded\",\n            trigger: \".o-mail-Chatter\",\n            async run() {\n                await contains(\".o-mail-Message\", { count: 1 });\n            },\n        },\n        {\n            content: \"Click on Send Message\",\n            trigger: \"button:contains(Send message)\",\n        },\n        {\n            content: \"Write something in composer\",\n            trigger: \".o-mail-Composer-input\",\n            run: \"text blahblah @Not\",\n        },\n        {\n            content: \"Mention a partner\",\n            trigger: \".o-mail-Composer-suggestion:contains(Not A Demo User)\",\n        },\n        {\n            content: \"Add one file in composer\",\n            trigger: \".o-mail-Composer button[aria-label='Attach files']\",\n            async run() {\n                await inputFiles(\".o-mail-Composer-coreMain .o_input_file\", [\n                    await createFile({\n                        content: \"hello, world\",\n                        contentType: \"text/plain\",\n                        name: \"text.txt\",\n                    }),\n                ]);\n            },\n        },\n        {\n            content: \"Open full composer\",\n            trigger: \"button[aria-label='Full composer']\",\n            extra_trigger: \".o-mail-AttachmentCard:not(.o-isUploading)\", // waiting the attachment to be uploaded\n        },\n        {\n            content: \"Check composer keeps open after pushing Escape\",\n            trigger: \".o_mail_composer_form_view\",\n            run: () => {\n                window.dispatchEvent(\n                    new KeyboardEvent(\"keydown\", {\n                        bubbles: true,\n                        key: \"Escape\",\n                    })\n                );\n            },\n        },\n        {\n            content: \"Check the earlier provided attachment is listed\",\n            trigger: '.o_attachment[title=\"text.txt\"]',\n            run() {},\n        },\n        {\n            content: \"Check subject is autofilled\",\n            trigger: '[name=\"subject\"] input',\n            run() {\n                const subjectValue = document.querySelector('[name=\"subject\"] input').value;\n                if (subjectValue !== \"Jane\") {\n                    console.error(\n                        `Full composer should have \"Jane\" in subject input (actual: ${subjectValue})`\n                    );\n                }\n            },\n        },\n        {\n            content: \"Check composer content is kept\",\n            trigger: '.o_field_html[name=\"body\"]',\n            run() {\n                const bodyContent = document.querySelector(\n                    '.o_field_html[name=\"body\"]'\n                ).textContent;\n                if (!bodyContent.includes(\"blahblah @Not A Demo User\")) {\n                    console.error(\n                        `Full composer should contain text from small composer (\"blahblah @Not A Demo User\") in body input (actual: ${bodyContent})`\n                    );\n                }\n                const mentionLink = document.querySelector(\n                    '.o_field_html[name=\"body\"] a'\n                ).textContent;\n                if (!mentionLink.includes(\"@Not A Demo User\")) {\n                    console.error(\n                        `Full composer should contain mention link from small composer (\"@Not A Demo User\") in body input)`\n                    );\n                }\n            },\n        },\n        {\n            content: \"Open templates\",\n            trigger: '.o_field_widget[name=\"template_id\"] input',\n        },\n        {\n            content: \"Check a template is listed\",\n            in_modal: false,\n            trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Test template\")',\n            run() {},\n        },\n        {\n            content: \"Send message\",\n            trigger: \".o_mail_send\",\n        },\n        {\n            content: \"Check message is shown\",\n            trigger: '.o-mail-Message-body:contains(\"blahblah @Not A Demo User\")',\n        },\n        {\n            content: \"Check message contains the attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { contains, scroll } from \"@web/../tests/utils\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_message_load_order_tour\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o-mail-DiscussSidebarChannel:contains(MyTestChannel)\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o-mail-Thread .o-mail-Message\",\n            async run() {\n                await contains(\".o-mail-Thread .o-mail-Message\", { count: 30 });\n                await contains(\".o-mail-Thread\", { scroll: \"bottom\" });\n            },\n        },\n        {\n            trigger: \"*[title='Pinned Messages']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o-mail-MessageCard-jump\",\n            run: \"click\",\n        },\n        {\n            // Messages depends on FETCH_LIMIT (currently set to 30) in\n            // the thread service. Thus, at first load the message range\n            // will be (31 - 60). This trigger ensures the next messages\n            // are fetched after jumping to the message.\n            trigger: \".o-mail-Thread .o-mail-Message:first:not(:contains(31))\",\n            async run() {\n                await contains(\".o-mail-Thread .o-mail-Message\", { count: 16 });\n                await contains(\".o-mail-Thread\", { scroll: 0 });\n                // ensure 1 - 16 are loaded in order: 15 below and the\n                // one we're loading messages around.\n                const messages = Array.from(\n                    document.querySelectorAll(\".o-mail-Thread .o-mail-Message-content\")\n                ).map((el) => el.innerText);\n                for (let i = 0; i < 16; i++) {\n                    if (messages[i] !== (i + 1).toString()) {\n                        throw new Error(\"Wrong message order after loading around\");\n                    }\n                }\n                await scroll(\".o-mail-Thread\", \"bottom\");\n            },\n        },\n        {\n            // After jumping to the pinned message, the message range\n            // was (1 -16): 15 before (but none were found), 15 after\n            // and the pinned message itself. This trigger ensures the\n            // next messages are fetched after scrolling to the bottom.\n            trigger: \".o-mail-Thread .o-mail-Message:contains(17)\",\n            async run() {\n                await contains(\".o-mail-Thread .o-mail-Message\", { count: 46 });\n                // ensure 1 - 46  are loaded in order.\n                const messages = Array.from(\n                    document.querySelectorAll(\".o-mail-Thread .o-mail-Message-content\")\n                ).map((el) => el.innerText);\n                for (let i = 0; i < 46; i++) {\n                    if (messages[i] !== (i + 1).toString()) {\n                        throw new Error(\"Wrong message order after loading after\");\n                    }\n                }\n            },\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { contains } from \"@web/../tests/utils\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_template_dynamic_placeholder_tour\", {\n    test: true,\n    url: \"/web\",\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: 'Go into the Setting \"app\"',\n            trigger: '.o_app[data-menu-xmlid=\"base.menu_administration\"]',\n        },\n        {\n            content: \"Open email templates\",\n            trigger: 'button[name=\"open_mail_templates\"]',\n        },\n        {\n            content: \"Create a new email template\",\n            trigger: \"button.o_list_button_add\",\n        },\n        {\n            content: 'Insert # inside \"Subject\" input',\n            trigger: 'div[name=\"subject\"] input[type=\"text\"]',\n            async run(actions) {\n                actions.text(`no_model_id #`, this.$anchor);\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { bubbles: true, key: \"#\" })\n                );\n                await contains(\"div[name='subject'] input[type='text']\", {\n                    value: \"no_model_id #\",\n                });\n                await contains(\".o_notification\", {\n                    text: \"You need to select a model before opening the dynamic placeholder selector.\",\n                });\n            },\n        },\n        {\n            content: 'Select \"Contact\" model',\n            trigger: 'div[name=\"model_id\"] input[type=\"text\"]',\n            run: \"text Contact\",\n        },\n        {\n            content: \"Wait for the autocomplete RPC\",\n            trigger: 'div[name=\"model_id\"] .ui-autocomplete:contains(\"Contact\")',\n            isCheck: true,\n        },\n        {\n            content: \"Click on contact\",\n            trigger: 'div[name=\"model_id\"] .ui-autocomplete',\n            run: async function () {\n                const contact = Array.from(\n                    document.querySelectorAll(\n                        'div[name=\"model_id\"] .ui-autocomplete .dropdown-item'\n                    )\n                ).find((el) => el.textContent === \"Contact\");\n                await contact.click();\n            },\n        },\n        {\n            content: \"Wait for the drop down to disappear\",\n            trigger: 'div[name=\"model_id\"] .o-autocomplete:not(:has(.ui-autocomplete))',\n            run: async () => {\n                // Ensure the system has registered a correct model value before\n                // we try to open the DPH.\n                // It seems that the autocomplete validation can be very slow.\n                await new Promise((r) => setTimeout(r, 200));\n            },\n        },\n        {\n            content: 'Retry insert # inside \"Subject\" input',\n            trigger: 'div[name=\"subject\"] input[type=\"text\"]',\n            run(actions) {\n                actions.text(`yes_model_id #`, this.$anchor);\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { bubbles: true, key: \"#\" })\n                );\n            },\n        },\n        {\n            content: \"Check if the dynamic placeholder popover is opened\",\n            trigger: \"div.o_model_field_selector_popover\",\n            isCheck: true,\n        },\n        {\n            content: \"filter the dph result\",\n            trigger: \"div.o_model_field_selector_popover_search input[type='text']\",\n            run: \"text name\",\n        },\n        {\n            content: \"Click on the first entry of the dynamic placeholder\",\n            trigger: 'div.o_model_field_selector_popover li:first-child button:contains(\"Name\")',\n        },\n        {\n            content: \"Enter a default value\",\n            trigger:\n                'div.o_model_field_selector_popover .o_model_field_selector_default_value_input input[type=\"text\"]',\n            run: \"text defValue\",\n        },\n        {\n            content: \"Click on the the dynamic placeholder default value\",\n            trigger: \"div.o_model_field_selector_popover li:first-child button\",\n        },\n        {\n            content: \"Wait for the popover to disappear\",\n            trigger: \"body:not(:has(.o_model_field_selector_popover))\",\n        },\n        {\n            content: \"Check if subject value was correclty updated\",\n            trigger: 'div[name=\"subject\"] input[type=\"text\"]',\n            run() {\n                const subjectValue = this.$anchor[0].value;\n                const correctValue = \"yes_model_id {{object.name or '''defValue'''}}\";\n                if (subjectValue !== correctValue) {\n                    console.error(\n                        `Email template should have \"${correctValue}\" in subject input (actual: ${subjectValue})`\n                    );\n                }\n            },\n        },\n        {\n            content: \"Insert tesxt inside editable\",\n            trigger: \".note-editable.odoo-editor-editable\",\n            run(actions) {\n                actions.text(`/`, this.$anchor);\n                document.querySelector(\".note-editable\").dispatchEvent(\n                    new InputEvent(\"input\", {\n                        inputType: \"insertText\",\n                        data: \"/\",\n                    })\n                );\n            },\n        },\n        {\n            content: \"Click on the the dynamic placeholder commandBar options\",\n            trigger: \"div.oe-powerbox-commandWrapper:contains(Dynamic Placeholder)\",\n        },\n        {\n            content: \"Check if the dynamic placeholder popover is opened\",\n            trigger: \"div.o_model_field_selector_popover\",\n        },\n        {\n            content: \"filter the dph result\",\n            trigger: \"div.o_model_field_selector_popover_search input[type='text']\",\n            run: \"text name\",\n        },\n        {\n            content: \"Click on the first entry of the dynamic placeholder\",\n            trigger: 'div.o_model_field_selector_popover li:first-child button:contains(\"Name\")',\n        },\n        {\n            content: \"Enter a default value\",\n            trigger:\n                'div.o_model_field_selector_popover .o_model_field_selector_default_value_input input[type=\"text\"]',\n            run: \"text defValue\",\n        },\n        {\n            content: \"Click on the the dynamic placeholder default value\",\n            trigger: \"div.o_model_field_selector_popover li:first-child button\",\n        },\n        {\n            content: \"Ensure the editable contain the dynamic placeholder t tag\",\n            trigger:\n                \".note-editable.odoo-editor-editable t[t-out=\\\"object.name or '''defValue'''\\\"]\",\n        },\n        {\n            content: \"Discard form changes\",\n            trigger: \"button.o_form_button_cancel\",\n        },\n        {\n            content: \"Wait for the form view to disappear\",\n            trigger: \"body:not(:has(.o_form_sheet))\",\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\n/**\n * Verify that a user can modify their own profile information.\n */\nregistry.category(\"web_tour.tours\").add(\"mail/static/tests/tours/user_modify_own_profile_tour.js\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Open user account menu\",\n            trigger: \".o_user_menu button\",\n        },\n        {\n            content: \"Open preferences / profile screen\",\n            trigger: \"[data-menu=settings]\",\n        },\n        {\n            content: \"Update the email address\",\n            trigger: 'div[name=\"email\"] input',\n            run: \"text updatedemail@example.com\",\n        },\n        {\n            content: \"Save the form\",\n            trigger: 'button[name=\"preference_save\"]',\n            extra_trigger: \"body.modal-open\",\n        },\n        {\n            content: \"Wait until the modal is closed\",\n            isCheck: true,\n            trigger: \"body:not(.modal-open)\",\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('portal_load_homepage', {\n    test: true,\n    url: '/my',\n    steps: () => [\n        {\n            content: \"Check portal is loaded\",\n            trigger: 'a[href*=\"/my/account\"]:contains(\"Edit\"):first',\n        },\n        {\n            content: \"Load my account details\",\n            trigger: 'input[value=\"Joel Willis\"]',\n            isCheck: true,\n        },\n        {\n            content: 'type a different phone number',\n            trigger: 'input[name=\"phone\"]',\n            run: 'text +1 555 666 7788',\n        },\n        {\n            content: \"Submit the form\",\n            trigger: 'button[type=submit]',\n        },\n        {\n            content: \"Check that we are back on the portal\",\n            trigger: 'a[href*=\"/my/account\"]:contains(\"Edit\"):first',\n            isCheck: true,\n        }\n    ]\n});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('account_tax_group', {\n    test: true,\n    url: \"/web\",\n    steps: () => [stepUtils.showAppsMenuItem(),\n    {\n        id: 'account_menu_click',\n        content: \"Go to Invoicing\",\n        trigger: '.o_app[data-menu-xmlid=\"account.menu_finance\"]',\n    },\n    {\n        content: \"Go to Vendors\",\n        trigger: 'span:contains(\"Vendors\")',\n    },\n    {\n        content: \"Go to Bills\",\n        trigger: 'a:contains(\"Bills\")',\n    },\n    {\n        extra_trigger: '.o_breadcrumb .text-truncate:contains(\"Bills\")',\n        content: \"Create new bill\",\n        trigger: '.o_control_panel_main_buttons .d-none .o_list_button_add',\n    },\n    // Set a vendor\n    {\n        content: \"Add vendor\",\n        trigger: 'div.o_field_widget.o_field_res_partner_many2one[name=\"partner_id\"] div input',\n        run: 'text Account Tax Group Partner',\n    },\n    {\n        content: \"Valid vendor\",\n        trigger: '.ui-menu-item a:contains(\"Account Tax Group Partner\")',\n    },\n    // Add First product\n    {\n        content: \"Add items\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_field_x2many_list_row_add a:contains(\"Add a line\")',\n    },\n    {\n        content: \"Select input\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_selected_row .o_list_many2one[name=\"product_id\"] input',\n    },\n    {\n        content: \"Type item\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_selected_row .o_list_many2one[name=\"product_id\"] input',\n        run: \"text Account Tax Group Product\",\n    },\n    {\n        content: \"Valid item\",\n        trigger: '.ui-menu-item-wrapper:contains(\"Account Tax Group Product\")',\n    },\n    // Save account.move\n    {\n        content: \"Save the account move\",\n        trigger: '.o_form_button_save',\n    },\n    ...stepUtils.saveForm(),\n    // Edit tax group amount\n    {\n        content: \"Edit tax group amount\",\n        trigger: '.o_tax_group_edit',\n    },\n    {\n        content: \"Modify the input value\",\n        trigger: '.o_tax_group_edit_input input',\n        run: function (actions) {\n            $('.o_tax_group_edit_input input').val(200);\n            $('.o_tax_group_edit_input input').select();\n            $('.o_tax_group_edit_input input').blur();\n        },\n    },\n    // Check new value for total (with modified tax_group_amount).\n    {\n        content: \"Valid total amount\",\n        trigger: 'span[name=\"amount_total\"]:contains(\"800\")',\n    },\n    // Modify the quantity of the object\n    {\n        content: \"Select item quantity\",\n        trigger: 'div[name=\"invoice_line_ids\"] tbody tr.o_data_row .o_list_number[name=\"quantity\"]',\n    },\n    {\n        content: \"Change item quantity\",\n        trigger: 'div[name=\"invoice_line_ids\"] tbody tr.o_data_row .o_list_number[name=\"quantity\"] input',\n        run: 'text 2',\n    },\n    {\n        content: \"Valid the new value\",\n        trigger: 'div[name=\"invoice_line_ids\"] tbody tr.o_data_row .o_list_number[name=\"quantity\"] input',\n        run: function (actions) {\n            let keydownEvent = jQuery.Event('keydown');\n            keydownEvent.key = \"Enter\";\n            this.$anchor.trigger(keydownEvent);\n        },\n    },\n    // Save form\n    {\n        content: \"Save the account move\",\n        trigger: '.o_form_button_save',\n    },\n    ...stepUtils.saveForm(),\n    // Check new tax group value\n    {\n        content: \"Check new value of tax group\",\n        trigger: '.o_tax_group_amount_value:contains(\"120\")',\n    },\n    {\n        content: \"Edit tax value\",\n        trigger: '.o_tax_group_edit_input input',\n        run: 'text 2'\n    },\n    {\n        content: \"Check new value of total\",\n        trigger: '.oe_subtotal_footer_separator:contains(\"1,202\")',\n    },\n    {\n        content: \"Discard changes\",\n        trigger: '.o_form_button_cancel',\n    },\n    {\n        content: \"Check tax value is reset\",\n        trigger: '.o_tax_group_amount_value:contains(\"120\")',\n        isCheck: true,\n    },\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n// This tour relies on data created on the Python test.\nregistry.category(\"web_tour.tours\").add('sale_signature', {\n    test: true,\n    url: '/my/quotes',\n    steps: () => [\n    {\n        content: \"open the test SO\",\n        trigger: 'a:containsExact(\"test SO\")',\n    },\n    {\n        content: \"click sign\",\n        trigger: 'a:contains(\"Sign\")',\n    },\n    {\n        content: \"check submit is enabled\",\n        trigger: '.o_portal_sign_submit:enabled',\n        run: function () {},\n    },\n    {\n        content: \"click select style\",\n        trigger: '.o_web_sign_auto_select_style button',\n    },\n    {\n        content: \"click style 4\",\n        trigger: '.o_web_sign_auto_select_style .dropdown-item:eq(3)',\n    },\n    {\n        content: \"click submit\",\n        trigger: '.o_portal_sign_submit:enabled',\n    },\n    {\n        content: \"check it's confirmed\",\n        trigger: '#quote_content:contains(\"Thank You\")',\n    }, {\n        trigger: '#quote_content',\n        run: function () {\n            window.location.href = window.location.origin + '/web';\n        },  // Avoid race condition at the end of the tour by returning to the home page.\n    },\n    {\n        trigger: 'nav',\n        run: function() {},\n    }\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('personal_stage_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    content: \"Open Pig Project\",\n    trigger: '.o_kanban_record:contains(\"Pig\")',\n}, {\n    // Default is grouped by stage, user should not be able to create/edit a column\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_quick_create)\",\n    run: function () {},\n}, {\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_edit)\",\n    run: function () {},\n}, {\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_delete)\",\n    run: function () {},\n}, {\n    content: \"Go to tasks\",\n    trigger: 'button[data-menu-xmlid=\"project.menu_project_management\"]',\n},{\n    content: \"Go to my tasks\", // My tasks is grouped by personal stage by default\n    trigger: 'a[data-menu-xmlid=\"project.menu_project_management_my_tasks\"]',\n}, {\n    content: \"Check that we can create a new stage\",\n    trigger: '.o_column_quick_create .o_quick_create_folded'\n}, {\n    content: \"Create a new personal stage\",\n    trigger: 'input.form-control',\n    run: 'text Never',\n}, {\n    content: \"Confirm create\",\n    trigger: '.o_kanban_add',\n}, {\n    content: \"Check that column exists\",\n    trigger: '.o_kanban_header:contains(\"Never\")',\n    run: function () {},\n}, {\n    content: 'Open column edit dropdown',\n    trigger: '.o_kanban_header:eq(0)',\n    run: function () {\n        document.querySelector('.o_kanban_config.dropdown .dropdown-toggle').dispatchEvent(new Event('click'));\n    },\n}, {\n    content: \"Try editing inbox\",\n    trigger: \".dropdown-item.o_column_edit\",\n}, {\n    content: \"Change title\",\n    trigger: 'div.o_field_char[name=\"name\"] input',\n    run: 'text  (Todo)',\n}, {\n    content: \"Save changes\",\n    trigger: '.btn-primary:contains(\"Save\")',\n}, {\n    content: \"Check that column was updated\",\n    trigger: '.o_kanban_header:contains(\"Todo\")',\n}, {\n    content: \"Create a personal task from the quick create form\",\n    trigger: '.o-kanban-button-new',\n}, {\n    content: \"Create a new personal task\",\n    trigger: 'input.o_input:not(.o_searchview_input)',\n    run: 'text New Test Task',\n}, {\n    content: \"Confirm create\",\n    trigger: '.o_kanban_add',\n}, {\n    content: \"Check that task exists\",\n    trigger: '.o_kanban_record_title:contains(\"New Test Task\")',\n    run: function () {},\n}]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('burndown_chart_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    content: 'Open \"Burndown Chart Test\" project menu',\n    trigger: '.o_kanban_record:contains(\"Burndown Chart Test\") .o_dropdown_kanban .dropdown-toggle',\n}, {\n    content: `Open \"Burndown Chart Test\" project's \"Burndown Chart\" view`,\n    trigger: '.o_kanban_record:contains(\"Burndown Chart Test\") .o_kanban_manage_reporting div[role=\"menuitem\"] a:contains(\"Burndown Chart\")',\n}, {\n    content: 'The sort buttons are not rendered',\n    trigger: '.o_graph_renderer:not(:has(.btn-group[role=toolbar][aria-label=\"Sort graph\"]))',\n    extra_trigger: '.o_graph_renderer',\n}, {\n    content: 'Remove the project search \"Burndown Chart Test\"',\n    trigger: '.o_searchview_facet:contains(\"Burndown Chart Test\") .o_facet_remove',\n}, {\n    content: 'Search Burndown Chart',\n    trigger: 'input.o_searchview_input',\n    run: `text Burndown`,\n}, {\n    content: 'Validate search',\n    trigger: '.o_searchview_autocomplete .o_menu_item:contains(\"Project\")',\n}, {\n    content: 'Remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_searchview_facet:contains(\"Date: Month\") .o_facet_remove',\n}, {\n    content: 'A \"The Burndown Chart must be grouped by Date and Stage\" notification is shown when trying to remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_notification_manager .o_notification:contains(\"The Burndown Chart must be grouped by Date and Stage\") button.o_notification_close',\n}, {\n    content: 'Open the search panel menu',\n    trigger: '.o_control_panel .o_searchview_dropdown_toggler',\n}, {\n    content: 'The Stage group menu item is invisible',\n    trigger: '.o_group_by_menu:not(:has(.o_menu_item:contains(\"Stage\")))',\n}, {\n    content: 'Open the Date group by sub menu',\n    trigger: '.o_group_by_menu button.o_menu_item:contains(\"Date\")',\n}, {\n    content: 'Click on the selected Date sub menu',\n    trigger: '.o_group_by_menu button.o_menu_item:contains(\"Date\") + * .dropdown-item.selected',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('click'));\n    },\n}, {\n    content: 'A \"The Burndown Chart must be grouped by Date\" notification is shown when trying to remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_notification_manager .o_notification:contains(\"The Burndown Chart must be grouped by Date\") button.o_notification_close',\n}, {\n    content: 'Open the search panel menu',\n    trigger: '.o_control_panel .o_searchview_dropdown_toggler',\n}, {\n    content: 'Open the Date filter sub menu',\n    trigger: '.o_filter_menu button.o_menu_item:contains(\"Date\")',\n}, {\n    content: 'Click on the first Date filter sub menu',\n    trigger: '.o_filter_menu .o_menu_item:contains(\"Date\") + * .dropdown-item:first-child',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('click'));\n    },\n}, {\n    content: 'Close the Date filter menu',\n    trigger: '.o_graph_renderer',\n}, {\n    content: 'Open the search panel menu',\n    trigger: '.o_control_panel .o_searchview_dropdown_toggler',\n}, {\n    content: 'The comparison menu is not rendered',\n    trigger: ':not(:has(.o_comparison_menu))',\n    isCheck: true,\n}]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nconst projectSharingSteps = [...stepUtils.goToAppSteps(\"project.menu_main_pm\", 'Go to the Project App.'), {\n    trigger: '.o_kanban_record:contains(\"Project Sharing\") .o_dropdown_kanban .dropdown-toggle',\n    content: 'Open the project dropdown.'\n}, {\n    trigger: '.o_kanban_record:contains(\"Project Sharing\") .dropdown-menu a:contains(\"Share\")',\n    content: 'Start editing the project.',\n}, {\n    trigger: 'div.o_field_radio[name=\"access_mode\"] div.o_radio_item > input[data-value=\"edit\"]',\n    content: 'Select \"Edit\" as Access mode in the \"Share Project\" wizard.',\n}, {\n    trigger: '.o_field_many2many_tags_email[name=partner_ids] input',\n    extra_trigger: 'label[for=partner_ids_0]:contains(\"Invite People\")',\n    content: 'Select the user portal as collaborator to the \"Project Sharing\" project.',\n    run: 'text Georges',\n}, {\n    trigger: '.ui-autocomplete a.dropdown-item:contains(\"Georges\")',\n    in_modal: false,\n}, {\n    trigger: 'footer > button[name=\"action_share_record\"]',\n    content: 'Confirm the project sharing with this portal user.',\n}, {\n    trigger: '.o_web_client',\n    content: 'Go to project portal view to select the \"Project Sharing\" project',\n    run: function () {\n        window.location.href = window.location.origin + '/my/projects';\n    },\n}, {\n    id: 'project_sharing_feature',\n    trigger: 'table > tbody > tr a:has(span:contains(Project Sharing))',\n    content: 'Select \"Project Sharing\" project to go to project sharing feature for this project.',\n}, {\n    trigger: 'iframe .o_project_sharing',\n    content: 'Wait the project sharing feature be loaded',\n    run: function () {},\n}, {\n    trigger: 'iframe button.o-kanban-button-new',\n    content: 'Click \"Create\" button',\n    run: 'click',\n}, {\n    trigger: 'iframe .o_kanban_quick_create .o_field_widget[name=\"name\"] input',\n    content: 'Create Task',\n    run: 'text Test Create Task',\n}, {\n    trigger: 'iframe .o_kanban_quick_create .o_kanban_edit',\n    content: 'Go to the form view of this new task',\n}, {\n    trigger: 'iframe div[name=\"stage_id\"] div.o_statusbar_status button[aria-checked=\"false\"]:contains(Done)',\n    content: 'Change the stage of the task.',\n}, {\n    trigger: 'iframe .o_portal_chatter_composer_input .o_portal_chatter_composer_body textarea',\n    content: 'Write a message in the chatter of the task',\n    run: 'text I create a new task for testing purpose.',\n}, {\n    trigger: 'iframe .o_portal_chatter_composer_input .o_portal_chatter_composer_body button[name=\"send_message\"]',\n    content: 'Send the message',\n}, {\n    trigger: 'iframe ol.breadcrumb > li.o_back_button > a:contains(Project Sharing)',\n    content: 'Go back to the kanban view',\n}, {\n    trigger: 'iframe .o_searchview_dropdown_toggler',\n    content: 'open the search panel menu',\n}, {\n    trigger: 'iframe .o_filter_menu .dropdown-item:first-child',\n    content: 'click on the first item in the filter menu',\n}, {\n    trigger: 'iframe .o_group_by_menu .dropdown-item:first-child',\n    content: 'click on the first item in the group by menu',\n}, {\n    trigger: 'iframe .o_favorite_menu .o_add_favorite',\n    content: 'open accordion \"save current search\" in favorite menu',\n}, {\n    trigger: 'iframe .o_favorite_menu .o_accordion_values .o_save_favorite',\n    content: 'click to \"save\" button in favorite menu',\n}, {\n    trigger: 'iframe .o_filter_menu .dropdown-item:first-child',\n    content: 'click on the first item in the filter menu',\n}, {\n    trigger: 'iframe .o_group_by_menu .dropdown-item:first-child',\n    content: 'click on the first item in the group by menu',\n}, {\n    trigger: 'iframe .o_favorite_menu .o_accordion_values .o_save_favorite',\n    content: 'click to \"save\" button in favorite menu',\n}, {\n    trigger: 'iframe button.o_switch_view.o_list',\n    content: 'Go to the list view',\n}, {\n    trigger: 'iframe .o_list_view',\n    content: 'Check the list view',\n    isCheck: true,\n}];\n\nregistry.category(\"web_tour.tours\").add('project_sharing_tour', {\n    test: true,\n    url: '/web',\n    steps: () => {\n        return projectSharingSteps;\n    } \n});\n\nregistry.category(\"web_tour.tours\").add(\"portal_project_sharing_tour\", {\n    test: true,\n    url: \"/my/projects\",\n    steps: () => {\n        // The begining of the project sharing feature\n        const projectSharingStepIndex = projectSharingSteps.findIndex(s => s?.id === 'project_sharing_feature');\n        return projectSharingSteps.slice(projectSharingStepIndex, projectSharingSteps.length);\n    }\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction changeFilter(filterName) {\n    return [\n        {\n            trigger: '.o_control_panel_actions .o_searchview_dropdown_toggler',\n            content: 'open searchview menu',\n        },\n        {\n            trigger: `.o_favorite_menu .dropdown-item span:contains(\"${filterName}\")`,\n        },\n        {\n            trigger: '.o_control_panel_actions .o_searchview_dropdown_toggler',\n            content: 'close searchview menu',\n        },\n    ];\n}\n\nregistry.category(\"web_tour.tours\").add('project_tags_filter_tour',\n    {\n        test: true,\n        url: '/web',\n        steps: () => [stepUtils.showAppsMenuItem(),{\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n},\n...changeFilter(\"Corkscrew tail tag filter\"),\n{\n    trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"pig\"))) .o_kanban_record:has(span:contains(\"Pigs\"))',\n    extra_trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"goat\"))):not(:has(.o_kanban_record))',\n    content: 'check that the corkscrew tail filter has taken effect',\n    run: () => {},\n}, ...changeFilter(\"horned tag filter\"),\n{\n    trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"goat\"))) .o_kanban_record:has(span:contains(\"Goats\"))',\n    extra_trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"pig\"))):not(:has(.o_kanban_record))',\n    content: 'check that the horned filter has taken effect',\n    run: () => {},\n}, ...changeFilter(\"4 Legged tag filter\"),\n{\n    trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"goat\"))) .o_kanban_record:has(span:contains(\"Goats\"))',\n    extra_trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"pig\"))) .o_kanban_record:has(span:contains(\"Pigs\"))',\n    content: 'check that the 4 legged filter has taken effect',\n    run: () => {},\n},\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('project_test_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n    }, {\n        trigger: '.o-kanban-button-new',\n        extra_trigger: '.o_project_kanban',\n        width: 200,\n    }, {\n        trigger: '.o_project_name input',\n        run: 'text New Project',\n        id: 'project_creation',\n    }, {\n        trigger: '.o_open_tasks',\n        run: function (actions) {\n            actions.auto('.modal:visible .btn.btn-primary');\n        },\n    }, {\n        trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n        run: function (actions) {\n            actions.text(\"New\", this.$anchor.find(\"input\"));\n        },\n    }, {\n        trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n        auto: true,\n    }, {\n        trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n        extra_trigger: '.o_kanban_group',\n        run: function (actions) {\n            actions.text(\"Done\", this.$anchor.find(\"input\"));\n        },\n    }, {\n        trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n        auto: true,\n    }, {\n        trigger: '.o-kanban-button-new',\n        extra_trigger: '.o_kanban_group:eq(0)'\n    }, {\n        trigger: '.o_kanban_quick_create div.o_field_char[name=display_name] input',\n        extra_trigger: '.o_kanban_project_tasks',\n        run: 'text New task'\n    }, {\n        trigger: '.o_kanban_quick_create .o_kanban_add',\n        extra_trigger: '.o_kanban_project_tasks',\n        id: \"quick_create_tasks\",\n    }, {\n        trigger: '.o_field_text[name=\"name\"] textarea',\n        content: 'Set task name',\n        run: 'text New task',\n    }, {\n        trigger: 'div[name=\"user_ids\"].o_field_many2many_tags_avatar input',\n        content: 'Assign the task to you',\n        run: 'click',\n    }, {\n        trigger: 'ul.ui-autocomplete a .o_avatar_many2x_autocomplete',\n        content: 'Assign the task to you',\n    }, {\n        trigger: 'a[name=\"sub_tasks_page\"]',\n        content: 'Open sub-tasks notebook section',\n        run: 'click',\n    }, {\n        trigger: '.o_field_subtasks_one2many .o_list_renderer a[role=\"button\"]',\n        content: 'Add a subtask',\n        run: 'click',\n    }, {\n        trigger: '.o_field_subtasks_one2many div[name=\"name\"] input',\n        content: 'Set subtask name',\n        run: 'text new subtask'\n    }, {\n        trigger: 'button[special=\"save\"]',\n        extra_trigger: '.o_field_many2many_tags_avatar .o_m2m_avatar',\n        content: 'Save task',\n    },\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction openProjectUpdateAndReturnToTasks(view, viewClass) {\n    return [{\n            trigger: '.o_project_updates_breadcrumb',\n            content: 'Open Project Update from view : ' + view,\n            extra_trigger: `.${viewClass}`,\n        }, {\n            trigger: \".o-kanban-button-new\",\n            content: \"Create a new update from project task view : \" + view,\n            extra_trigger: '.o_project_update_kanban_view',\n        }, {\n            trigger: \"button.o_form_button_cancel\",\n            content: \"Discard project update from project task view : \" + view,\n        }, {\n            trigger: \".o_switch_view.o_list\",\n            content: \"Go to list of project update from view \" + view,\n        }, {\n            trigger: '.o_back_button',\n            content: 'Go back to the task view : ' + view,\n            // extra_trigger: '.o_list_view', // FIXME: [XBO] uncomment it when the sample data will be displayed after discarding the creation of a project update record.\n        }, {\n            trigger: `.${viewClass}`,\n            content: 'Check the task view : ' + view,\n            isCheck: true,\n        }\n    ];\n}\n\nregistry.category(\"web_tour.tours\").add('project_update_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_project_kanban',\n    width: 200,\n}, {\n    trigger: '.o_project_name input',\n    run: 'text New Project'\n}, {\n    trigger: '.o_open_tasks',\n    run: function (actions) {\n        actions.auto('.modal:visible .btn.btn-primary');\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n    run: function (actions) {\n        actions.text(\"New\", this.$anchor.find(\"input\"));\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n    auto: true,\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n    extra_trigger: '.o_kanban_group',\n    run: function (actions) {\n        actions.text(\"Done\", this.$anchor.find(\"input\"));\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n    auto: true,\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_kanban_group:eq(0)'\n}, {\n    trigger: '.o_kanban_quick_create div.o_field_char[name=display_name] input',\n    extra_trigger: '.o_kanban_project_tasks',\n    run: 'text New task'\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_add',\n    extra_trigger: '.o_kanban_project_tasks'\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_kanban_group:eq(0)'\n}, {\n    trigger: '.o_kanban_quick_create div.o_field_char[name=display_name] input',\n    extra_trigger: '.o_kanban_project_tasks',\n    run: 'text Second task'\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_add',\n    extra_trigger: '.o_kanban_project_tasks'\n}, {\n    trigger: '.o_kanban_group:nth-child(2) .o_kanban_header',\n    run: function () {\n        document.querySelector('.o_kanban_group:nth-child(2) .o_kanban_config.dropdown .dropdown-toggle').dispatchEvent(new Event('click'));\n    }\n}, {\n    trigger: \".dropdown-item.o_column_edit\",\n}, {\n    trigger: \".o_field_widget[name=fold] input\",\n}, {\n    trigger: \".modal-footer button\",\n}, {\n    trigger: \".o_kanban_record .oe_kanban_content\",\n    extra_trigger: '.o_kanban_project_tasks',\n    run: \"drag_and_drop .o_kanban_group:eq(1) \",\n}, {\n    trigger: \".o_project_updates_breadcrumb\",\n    content: 'Open Updates'\n}, {\n    trigger: \".o_add_milestone a\",\n    content: \"Add a first milestone\"\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text New milestone'\n}, {\n    trigger: \"input[data-field=deadline]\",\n    run: 'text 12/12/2099'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o_add_milestone a\",\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text Second milestone'\n}, {\n    trigger: \"input[data-field=deadline]\",\n    run: 'text 12/12/2022'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o_rightpanel_milestone:eq(1) .o_milestone_detail\",\n}, {\n    trigger: \"input[data-field=deadline]\",\n    run: 'text 12/12/2100'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o-kanban-button-new\",\n    content: \"Create a new update\"\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text New update'\n}, {\n    trigger: \".o_form_button_save\"\n}, {\n    trigger: \".o_field_widget[name='description'] h1:contains('Activities')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] h3:contains('Milestones')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li:contains('(12/12/2099 => 12/12/2100)')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li:contains('(due 12/12/2022)')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li:contains('(due 12/12/2100)')\",\n    run: function () {},\n}, {\n    trigger: '.o_back_button',\n    content: 'Go back to the kanban view the project',\n}, {\n    trigger: '.o_switch_view.o_list',\n    content: 'Open List View of Project Updates',\n}, {\n    trigger: '.o_back_button',\n    content: 'Go back to the kanban view the project',\n    extra_trigger: '.o_list_view',\n}, {\n    trigger: '.o_switch_view.o_graph',\n    content: 'Open Graph View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Graph\", \"o_graph_view\"), {\n    trigger: '.o_switch_view.o_list',\n    content: 'Open List View of Tasks',\n    extra_trigger: '.o_graph_view',\n}, ...openProjectUpdateAndReturnToTasks(\"List\", \"o_list_view\"), {\n    trigger: '.o_switch_view.o_pivot',\n    content: 'Open Pivot View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Pivot\", \"o_pivot_view\"), {\n    trigger: '.o_switch_view.o_calendar',\n    content: 'Open Calendar View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Calendar\", \"o_calendar_view\"), {\n    trigger: '.o_switch_view.o_activity',\n    content: 'Open Activity View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Activity\", \"o_activity_view\"),\n]});\n", "/** @odoo-module **/\n    \n    import { registry } from \"@web/core/registry\";\n    import { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n    registry.category(\"web_tour.tours\").add('debug_menu_set_defaults', {\n        test: true,\n        url: '/web?debug=1',\n        steps: () => [\n            ...stepUtils.goToAppSteps('contacts.menu_contacts', \"Open the contacts menu\"),\n            {\n                content: \"Create a new contact\",\n                trigger: '.o-kanban-button-new',\n            },\n            {\n                content: \"Check that Company is checked by default, and not Individual\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"company\"]:checked',\n                run: function () {},\n            },\n            {\n                content: \"Select the individual radio button\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"person\"]',\n            },\n            {\n                content: \"Open the debug menu\",\n                trigger: '.o_debug_manager button',\n            },\n            {\n                content: \"Click the Set Defaults menu\",\n                trigger: '.o_debug_manager .dropdown-item:contains(Set Defaults)',\n            },\n            {\n                content: \"Choose Company Type = Individual\",\n                trigger: '#formview_default_fields',\n                run: function () {\n                    const element_field = document.querySelector('select#formview_default_fields');\n                    element_field.value = 'company_type';\n                    element_field.dispatchEvent(new Event(\"change\"));\n                },\n            },\n            {\n                content: \"Check that there are conditions\",\n                trigger: '#formview_default_conditions',\n            },\n            {\n                content: \"Save the new default\",\n                trigger: 'footer button:contains(Save default)',\n            },\n            {\n                content: \"Discard the contact creation\",\n                trigger: 'button.o_form_button_cancel',\n            },\n            {\n                trigger: '.o_action_manager > .o_kanban_view .o-kanban-button-new',\n            },\n            {\n                content: \"Check that Individual is checked instead of Company\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"person\"]:checked',\n                run: function () {},\n            },\n            {\n                content: \"Discard the contact creation\",\n                trigger: 'button.o_form_button_cancel',\n            },\n            {\n                content: \"Wait for discard\",\n                trigger: '.o_control_panel .o-kanban-button-new',\n                run() {},\n            },\n        ]\n    });\n", "/** @odoo-module **/\n    \nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category('web_tour.tours').add('mailing_campaign', {\n    test: true,\n    url: '/web',\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: 'Select the \"Email Marketing\" app',\n            trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n        },\n        {\n            content: 'Select \"Campaings\" Navbar item',\n            trigger: '.o_nav_entry[data-menu-xmlid=\"mass_mailing.menu_email_campaigns\"]',\n        },\n        {\n            content: 'Select \"Newsletter\" campaign',\n            trigger: '.oe_kanban_card:contains(\"Newsletter\")',\n        },\n        {\n            content: 'Add a line (create new mailing)',\n            trigger: '.o_field_x2many_list_row_add a',\n        },\n        {\n            content: 'Pick the basic theme',\n            trigger: 'iframe',\n            run(actions) {\n                // For some reason the selectors inside the iframe cannot be triggered.\n                const link = this.$anchor[0].contentDocument.querySelector('#basic');\n                actions.click(link);\n            }\n        },\n        {\n            content: 'Fill in Subject',\n            trigger: '#subject_0',\n            run: 'text TestFromTour',\n        },\n        {\n            content: 'Fill in Mailing list',\n            trigger: '#contact_list_ids_0',\n            run: 'text Newsletter',\n        },\n        {\n            content: 'Pick \"Newsletter\" option',\n            trigger: '.o_input_dropdown a:contains(Newsletter)',\n        },\n        {\n            content: 'Save form',\n            trigger: '.o_form_button_save',\n        },\n        {\n            content: 'Check that newly created record is on the list',\n            trigger: '[name=\"mailing_mail_ids\"] td[name=\"subject\"]:contains(\"TestFromTour\")',\n            run: () => null,\n        },\n        ...stepUtils.saveForm(),\n    ]\n});\n", "/** @odoo-module **/\n    \nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('mailing_editor', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n}, {\n    trigger: 'button.o_list_button_add',\n}, {\n    trigger: 'div[name=\"contact_list_ids\"] .o_input_dropdown input[type=\"text\"]',\n}, {\n    trigger: 'div[name=\"contact_list_ids\"] .ui-state-active'\n}, {\n    content: 'choose the theme \"empty\" to edit the mailing with snippets',\n    trigger: '[name=\"body_arch\"] iframe #empty',\n}, {\n    content: 'wait for the editor to be rendered',\n    trigger: '[name=\"body_arch\"] iframe .o_editable[data-editor-message=\"DRAG BUILDING BLOCKS HERE\"]',\n    run: () => {},\n}, {\n    content: 'drag the \"Title\" snippet from the design panel and drop it in the editor',\n    trigger: '[name=\"body_arch\"] iframe #email_designer_default_body [name=\"Title\"] .oe_snippet_thumbnail',\n    run: function (actions) {\n        actions.drag_and_drop_native('[name=\"body_arch\"] iframe .o_editable', this.$anchor);\n    }\n}, {\n    content: 'wait for the snippet menu to finish the drop process',\n    trigger: '[name=\"body_arch\"] iframe #email_designer_header_elements:not(:has(.o_we_already_dragging))',\n    run: () => {}\n}, {\n    content: 'verify that the title was inserted properly in the editor',\n    trigger: '[name=\"body_arch\"] iframe .o_editable h1',\n    run: () => {},\n}, {\n    trigger: 'button.o_form_button_save',\n}, {\n    content: 'verify that the save failed (since the field \"subject\" was not set and it is required)',\n    trigger: 'label.o_field_invalid',\n    run: () => {},\n}, {\n    content: 'verify that the edited mailing body was not lost during the failed save',\n    trigger: '[name=\"body_arch\"] iframe .o_editable h1',\n    run: () => {},\n}, {\n    trigger: 'input#subject_0',\n    run: 'text TestFromTour',\n}, {\n    trigger: '.o_form_view', // blur previous input\n},\n...stepUtils.saveForm(),\n{\n    trigger: 'iframe .o_editable',\n    run: () => {},\n}]});\n", "/** @odoo-module **/\n    \nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nimport { boundariesIn, setSelection } from \"@web_editor/js/editor/odoo-editor/src/utils/utils\";\n\nregistry.category(\"web_tour.tours\").add('mailing_editor_theme', {\n    test: true,\n    url: '/web',\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: \"Select the 'Email Marketing' app.\",\n            trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n        },\n        {\n            content: \"Click on the create button to create a new mailing.\",\n            trigger: 'button.o_list_button_add',\n        },\n        {\n            content: \"Fill in Subject\",\n            trigger: '#subject_0',\n            run: 'text Test Basic Theme',\n        },\n        {\n            content: \"Fill in Mailing list\",\n            trigger: '#contact_list_ids_0',\n            run: 'text Newsletter',\n        },\n        {\n            content: \"Pick 'Newsletter' option\",\n            trigger: '.o_input_dropdown a:contains(Newsletter)',\n        },\n        {\n            content: \"Pick the basic theme\",\n            trigger: 'iframe #basic',\n            extra_trigger: 'iframe .o_mail_theme_selector_new',\n        },\n        {\n            content: \"Make sure the snippets menu is hidden\",\n            trigger: 'iframe html:has(#oe_snippets.d-none)',\n            run: () => null, // no click, just check\n        },\n        {\n            content: \"Click on the New button to create another mailing\",\n            trigger: 'button.o_form_button_create',\n        },\n        {\n            content: \"Fill in Subject\",\n            trigger: '#subject_0',\n            extra_trigger: 'iframe .o_mail_theme_selector_new',\n            run: 'text Test Newsletter Theme',\n        },\n        {\n            content: \"Fill in Mailing list\",\n            trigger: '#contact_list_ids_0',\n            run: 'text Newsletter',\n        },\n        {\n            content: \"Pick 'Newsletter' option\",\n            trigger: '.o_input_dropdown a:contains(Newsletter)',\n        },\n        {\n            content: \"Pick the newsletter theme\",\n            trigger: 'iframe #newsletter',\n        },\n        {\n            content: \"Make sure the snippets menu is displayed\",\n            trigger: 'iframe #oe_snippets',\n            run: () => null, // no click, just check\n        },\n        {\n            content: 'Save form',\n            trigger: '.o_form_button_save',\n        },\n        {\n            content: 'Go back to previous mailing',\n            trigger: 'button.o_pager_previous',\n        },\n        {\n            content: \"Make sure the snippets menu is hidden\",\n            trigger: 'iframe html:has(#oe_snippets.d-none)',\n            run: () => null,\n        },\n        {\n            content: \"Add some content to be selected afterwards\",\n            trigger: 'iframe p',\n            run: 'text content',\n        },\n        {\n            content: \"Select text\",\n            trigger: 'iframe p:contains(content)',\n            run() {\n                setSelection(...boundariesIn(this.$anchor[0]), false);\n            }\n        },\n        {\n            content: \"Make sure the floating toolbar is visible\",\n            trigger: '#toolbar.oe-floating[style*=\"visible\"]',\n            run: () => null,\n        },\n        {\n            content: \"Open the color picker\",\n            trigger: '#toolbar #oe-text-color',\n        },\n        {\n            content: \"Pick a color\",\n            trigger: '#toolbar button[data-color=\"o-color-1\"]',\n        },\n        {\n            content: \"Check that color was applied\",\n            trigger: 'iframe p font.text-o-color-1',\n            run: () => null,\n        },\n        {\n            content: 'Save changes',\n            trigger: '.o_form_button_save',\n        },\n        {\n            content: \"Go to 'Mailings' list view\",\n            trigger: '.breadcrumb a:contains(Mailings)'\n        },\n        {\n            content: \"Open newly created mailing\",\n            trigger: 'td:contains(\"Test Basic Theme\")',\n        },\n        {\n            content: \"Make sure the snippets menu is hidden\",\n            trigger: 'iframe html:has(#oe_snippets.d-none)',\n            run: () => null,\n        },\n        {\n            content: \"Select content\",\n            trigger: 'iframe p:contains(content)',\n            run() {\n                setSelection(...boundariesIn(this.$anchor[0]), false);\n            }\n        },\n        {\n            content: \"Make sure the floating toolbar is visible\",\n            trigger: '#toolbar.oe-floating[style*=\"visible\"]',\n            run: () => null,\n        },\n        ...stepUtils.discardForm(),\n    ]\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n/*\n * Tour: unsubscribe from a mailing done on documents (aka not on contacts or\n * mailing lists). We assume email is not member of any mailing list in this test.\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_document', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of our services and will not be contacted again.')\",\n        }, {\n            content: \"No warning should be displayed\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted:not(:has(p:contains('You will not receive any news from those mailing lists you are a member of')))\",\n        }, {\n            contnet: \"Warning will not receive anything anymore\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not hear from us anymore.')\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"This should display the Feedback area\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Revert exclusion list\",\n            trigger: \"div#button_blocklist_remove\",\n        }, {\n            content: \"Confirmation exclusion list is removed\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email removed from our blocklist')\",\n        }, {\n            content: \"Now exclude me (again)\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n            isCheck: true,\n        },\n    ],\n});\n\n\n/*\n * Tour: unsubscribe from a mailing done on documents (aka not on contacts or\n * mailing lists). We assume email is member of mailing lists in this test.\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_document_with_lists', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of our services and will not be contacted again.')\",\n        }, {\n            content: \"Display warning about mailing lists\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not receive any news from those mailing lists you are a member of')\",\n        }, {\n            content: \"Warning should contain reference to memberships\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List1')\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"This should display the Feedback area\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Revert exclusion list\",\n            trigger: \"div#button_blocklist_remove\",\n        }, {\n            content: \"Confirmation exclusion list is removed\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email removed from our blocklist')\",\n        }, {\n            content: \"Now exclude me (again)\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n            isCheck: true,\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n/*\n * Tour: unsubscribe from a mailing done on lists (aka playing with opt-out flag\n * instead of directly blocking emails).\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_list', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of the List1, List2 mailing list')\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Now exclude me\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n            isCheck: true,\n        },\n    ],\n});\n\n\n/*\n * Tour: unsubscribe from a mailing done on lists (aka playing with opt-out flag\n * instead of directly blocking emails), then play with list subscriptions and\n * blocklist addition / removal. This is mainly an extended version of the tour\n * hereabove, easing debug and splitting checks.\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_list_with_update', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of the List1, List2 mailing list')\",\n        }, {\n            content: \"List1 is present, just opt-outed\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List1') span:contains('Not subscribed')\",\n        }, {\n            content: \"List3 is present, opt-outed (test starting data)\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List3') span:contains('Not subscribed')\",\n        }, {\n            content: \"List2 is proposed (not member -> proposal to join)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional li.list-group-item:contains('List2')\",\n        }, {\n            content: \"List4 is not proposed (not member but not private)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional:not(:has(li.list-group-item:contains('List4')))\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Now exclude me\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n        }, {\n            content: \"This should disable the 'Update my subscriptions' (Apply changes) button\",\n            trigger: \"div#o_mailing_subscription_blocklist:not(button#button_form_send)\",\n            isCheck: true,\n        }, {\n            content: \"Revert exclusion list\",\n            trigger: \"div#button_blocklist_remove\",\n        }, {\n            content: \"Confirmation exclusion list is removed\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email removed from our blocklist')\",\n        },  {\n            content: \"'Update my subscriptions' button usable again\",\n            trigger: \"button#button_form_send:not([disabled])\",\n            isCheck: true,\n        }, {\n            content: \"Choose the mailing list 3 to come back\",\n            trigger: \"ul#o_mailing_subscription_form_lists input[title='List3']\",\n        }, {\n            content: \"Add list 2\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional input[title='List2']\",\n        }, {\n            content: \"Update subscription\",\n            trigger: \"button#button_form_send\",\n        }, {\n            content: \"Confirmation changes are done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Membership updated')\",\n        }, {\n            content: \"List 3 is noted as subscribed again\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List3') span:contains('Subscribed')\",\n        }, {\n            content: \"List 2 has joined the subscriptions\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List2') span:contains('Subscribed')\",\n        }, {\n            content: \"No list in proposals\",\n            trigger: \"div#o_mailing_subscription_form_manage:not(:has(ul#o_mailing_subscription_form_lists_additional))\",\n        }, {\n            content: \"Feedback area is not displayed (nothing opt-out or no blocklist done, no feedback required)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n            extra_trigger: \"div#o_mailing_portal_subscription:not(fieldset)\",\n        }, {\n            content: \"Now exclude me (again)\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n        }, {\n            content: \"Should display warning about mailing lists\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not receive any news from those mailing lists you are a member of')\",\n        }, {\n            content: \"Warning should contain reference to memberships\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List2')\",\n            extra_trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List3')\",\n        }, {\n            content: \"Give a reason for blocklist (first one)\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason:first\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n            isCheck: true,\n        }\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n/*\n * Tour: use 'my' portal page of mailing to manage mailing lists subscription\n * as well as manage blocklist (add / remove my own email from block list).\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_my', {\n    test: true,\n    steps: () => [\n       {\n            content: \"List1 is present, opt-in member\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List1') span:contains('Subscribed')\",\n        }, {\n            content: \"List3 is present, opt-outed (test starting data)\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List3') span:contains('Not subscribed')\",\n        }, {\n            content: \"List2 is proposed (not member -> proposal to join)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional li.list-group-item:contains('List2')\",\n        }, {\n            content: \"List4 is not proposed (not member but not private)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional:not(:has(li.list-group-item:contains('List4')))\",\n        }, {\n            content: \"Feedback area is not displayed (nothing done, no feedback required)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n            extra_trigger: \"div#o_mailing_portal_subscription:not(fieldset)\",\n        }, {\n            content: \"List3: come back (choose to opt-in instead of opt-out)\",\n            trigger: \"ul#o_mailing_subscription_form_lists input[title='List3']\",\n        }, {\n            content: \"List2: join (opt-in, not already member)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional input[title='List2']\",\n        }, {\n            content: \"List1: opt-out\",\n            trigger: \"ul#o_mailing_subscription_form_lists input[title='List1']\",\n        }, {\n            content: \"Update subscription\",\n            trigger: \"button#button_form_send\",\n        }, {\n            content: \"Confirmation changes are done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Membership updated')\",\n        }, {\n            content: \"Should make feedback reasons choice appear (feedback still not displayed, linked to reasons)\",\n            trigger: \"div#o_mailing_portal_subscription fieldset\",\n            extra_trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose first reason, which should not display feedback (see data)\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason:first\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"This should display the Feedback area\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Once sent feedback area is readonly\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason[disabled]\",\n            extra_trigger: \"textarea[disabled]\",\n            isCheck: true,\n        }, {\n            content: \"Now exclude me\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n        }, {\n            content: \"This should disable the 'Update my subscriptions' (Apply changes) button\",\n            trigger: \"div#o_mailing_subscription_blocklist:not(button#button_form_send)\",\n            isCheck: true,\n        }, {\n            content: \"This should enabled Feedback again\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Display warning about mailing lists\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not receive any news from those mailing lists you are a member of')\",\n        }, {\n            content: \"Warning should contain reference to memberships\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List2')\",\n            extra_trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List3')\",\n        }, {\n            content: \"Give a reason for blocklist (first one)\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason:first\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n            isCheck: true,\n        }\n    ],\n});\n", "/** @odoo-module **/\n\nimport { markup } from \"@odoo/owl\";\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('mass_mailing_code_view_tour', {\n    url: '/web?debug=tests',\n    test: true,\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n        }, {\n            trigger: 'button.o_list_button_add',\n        }, {\n            trigger: 'input#subject_0',\n            content: markup('Pick the <b>email subject</b>.'),\n            position: 'bottom',\n            run: 'text Test'\n        }, {\n            trigger: 'div[name=\"contact_list_ids\"] .o_input_dropdown input[type=\"text\"]',\n            content: 'Click on the dropdown to open it and then start typing to search.',\n        }, {\n            trigger: 'div[name=\"contact_list_ids\"] .ui-state-active',\n            content: 'Select item from dropdown',\n            run: 'click',\n        }, {\n            trigger: 'div[name=\"body_arch\"] iframe #default',\n            content: markup('Choose this <b>theme</b>.'),\n            run: 'click',\n        }, {\n            trigger: 'iframe .o_codeview_btn',\n            content: markup('Click here to switch to <b>code view</b>'),\n            run: 'click'\n        }, {\n            trigger: 'iframe .o_codeview',\n            content: ('Remove all content from codeview'),\n            run: function () {\n                const iframe = document.querySelector('.wysiwyg_iframe');\n                const iframeDocument = iframe.contentWindow.document;\n                let element = iframeDocument.querySelector(\".o_codeview\");\n                element.value = '';\n            }\n        }, {\n            trigger: 'iframe .o_codeview_btn',\n            content: markup('Click here to switch back from <b>code view</b>'),\n            run: 'click'\n        }, {\n            trigger: '[name=\"body_arch\"] iframe .o_mail_wrapper_td',\n            content: 'Verify that the dropable zone was not removed',\n            run: () => {},\n        }, {\n            trigger: '[name=\"body_arch\"] iframe #email_designer_default_body [name=\"Title\"] .oe_snippet_thumbnail',\n            content: 'Drag the \"Title\" snippet from the design panel and drop it in the editor',\n            run: function (actions) {\n                actions.drag_and_drop_native('[name=\"body_arch\"] iframe .o_editable', this.$anchor);\n            }\n        }, {\n            trigger: '[name=\"body_arch\"] iframe .o_editable h1',\n            content: 'Verify that the title was inserted properly in the editor',\n            run: () => {},\n        },\n        ...stepUtils.discardForm(),\n    ]\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('snippets_mailing_menu_tabs', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        content: \"Select the 'Email Marketing' app.\",\n        trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n    },\n    {\n        content: \"Click on the create button to create a new mailing.\",\n        trigger: 'button.o_list_button_add',\n    },\n    {\n        content: \"Click on the 'Start From Scratch' template.\",\n        trigger: 'iframe #empty',\n    },\n    {\n        content: \"Click on the 'Design' tab.\",\n        trigger: 'iframe .o_we_customize_design_btn',\n    },\n    {\n        content: \"Click on the empty 'DRAG BUILDING BLOCKS HERE' area.\",\n        trigger: 'iframe .oe_structure.o_mail_no_options',\n    },\n    {\n        content: \"Click on the 'Design' tab.\",\n        trigger: 'iframe .o_we_customize_design_btn',\n    },\n    {\n        content: \"Verify that the customize panel is not empty.\",\n        trigger: 'iframe .o_we_customize_panel .snippet-option-DesignTab',\n        run: () => null, // it's a check\n    },\n    {\n        content: \"Click on the style tab.\",\n        trigger: 'iframe .o_we_customize_snippet_btn',\n    },\n    {\n        content: \"Click on the 'Design' tab.\",\n        trigger: 'iframe .o_we_customize_design_btn',\n    },\n    {\n        content: \"Verify that the customize panel is not empty.\",\n        trigger: 'iframe .o_we_customize_panel .snippet-option-DesignTab',\n        run: () => null, // it's a check\n    },\n    ...stepUtils.discardForm(),\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('snippets_mailing_menu_toolbar', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        content: \"Select the 'Email Marketing' app.\",\n        trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n    },\n    {\n        content: \"Click on the create button to create a new mailing.\",\n        trigger: 'button.o_list_button_add',\n    },\n    {\n        content: \"Wait for the theme selector to load.\",\n        trigger: 'iframe .o_mail_theme_selector_new',\n    },\n    {\n        content: \"Make sure there does not exist a floating toolbar\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeDocument = this.$anchor[0].contentDocument;\n            if (iframeDocument.querySelector('#toolbar.oe-floating')) {\n                console.error('There should not be a floating toolbar in the iframe');\n            }\n        },\n    },\n    {\n        content: \"Make sure the empty template is an option on non-mobile devices.\",\n        trigger: 'iframe #empty',\n        run: () => null,\n    },\n    {\n        content: \"Click on the default 'welcome' template.\",\n        trigger: 'iframe #default',\n    },\n    { // necessary to wait for the cursor to be placed in the first p\n      // and to avoid leaving the page before the selection is added\n        content: \"Wait for template selection event to be over.\",\n        trigger: 'iframe .o_editable.theme_selection_done',\n    },\n    {\n        content: \"Make sure the snippets menu is not hidden\",\n        trigger: 'iframe #oe_snippets:not(.d-none)',\n        run: () => null,\n    },\n    {\n        content: \"Wait for .s_text_block to be populated\",\n        trigger: 'iframe .s_text_block p',\n        run: () => null,\n    },\n    {\n        content: \"Click and select p block inside the editor\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeWindow = this.$anchor[0].contentWindow;\n            const iframeDocument = iframeWindow.document;\n            const p = iframeDocument.querySelector('.s_text_block p');\n            p.click();\n            const selection = iframeWindow.getSelection();\n            const range = iframeDocument.createRange();\n            range.selectNodeContents(p);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        },\n    },\n    {\n        content: \"Make sure the toolbar is there\",\n        trigger: 'iframe #oe_snippets .o_we_customize_panel #toolbar',\n        run: () => null,\n    },\n    ...stepUtils.discardForm(),\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('snippets_mailing_menu_toolbar_mobile', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        content: \"Select the 'Email Marketing' app.\",\n        trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n    },\n    {\n        content: \"Click on the create button to create a new mailing.\",\n        trigger: 'button.o_list_button_add',\n        mobile: true,\n    },\n    {\n        content: \"Check templates available in theme selector\",\n        trigger: 'iframe .o_mail_theme_selector_new',\n        run: function () {\n            if (this.$anchor[0].querySelector('#empty')) {\n                console.error('The empty template should not be visible on mobile.');\n            }\n        },\n        mobile: true,\n    },\n    {\n        content: \"Make sure the toolbar isn't floating\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeDocument = this.$anchor[0].contentDocument;\n            if (iframeDocument.querySelector('#toolbar.oe-floating')) {\n                console.error('There should not be a floating toolbar in the iframe');\n            }\n        },\n        mobile: true,\n    },\n    {\n        content: \"Click on the 'Start From Scratch' template.\",\n        trigger: 'iframe #default',\n        mobile: true,\n    },\n    {\n        content: \"Select an editable element\",\n        trigger: 'iframe .s_text_block',\n        mobile: true,\n    },\n    {\n        content: \"Make sure the snippets menu is hidden\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeDocument = this.$anchor[0].contentDocument;\n            if (!iframeDocument.querySelector('#oe_snippets.d-none')) {\n                console.error('The snippet menu should be hidden');\n            }\n        },\n        mobile: true,\n    },\n    {\n        content: \"Make sure the toolbar is there\",\n        trigger: 'iframe #toolbar.oe-floating',\n        run: () => null, // it's a check\n        mobile: true,\n    },\n    ...stepUtils.discardForm().map(command => ({...command, mobile: true})),\n    ]\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('hr_employee_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(),\n    {\n        content: \"Open Employees app\",\n        trigger: \".o_app[data-menu-xmlid='hr.menu_hr_root']\",\n        run: 'click',\n    },\n    {\n        content: \"Open an Employee Profile\",\n        trigger: \".o_kanban_record_title:contains('Johnny H.')\",\n        run: 'click',\n    },\n    {\n        content: \"Open user account menu\",\n        trigger: \".o_user_menu .dropdown-toggle\",\n        run: 'click',\n    }, {\n        content: \"Open My Profile\",\n        trigger: \"[data-menu=settings]\",\n        run: 'click',\n    },\n]});\n", "/** @odoo-module **/\n\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nimport { registry } from \"@web/core/registry\";\nimport { patch } from \"@web/core/utils/patch\";\n\n/**\n * As 'hr' changes the flow a bit and displays the user preferences form in a full view instead of\n * a modal, we adapt the steps of the original tour accordingly.\n */\npatch(registry.category(\"web_tour.tours\").get(\"mail/static/tests/tours/user_modify_own_profile_tour.js\"), {\n    steps() {\n        return [\n            {\n                content: 'Open user account menu',\n                trigger: '.o_user_menu button',\n            }, \n            {\n                content: \"Open preferences / profile screen\",\n                trigger: '[data-menu=settings]',\n            }, \n            {\n                content: \"Update the email address\",\n                trigger: 'div[name=\"email\"] input',\n                run: 'text updatedemail@example.com',\n            }, \n            ...stepUtils.saveForm(),\n        ];\n    }\n});\n\n", "/** @odoo-module **/\n\n/**\n * Speed up fade-in fade-out to avoid useless delay in tests.\n*/\nfunction patchSurveyWidget() {\n    const SurveyFormWidget = odoo.loader.modules.get('@survey/js/survey_form')[Symbol.for('default')]\n    SurveyFormWidget.include({\n        _submitForm: function () {\n            this.fadeInOutDelay = 0;\n            return this._super.apply(this, arguments);\n        }\n    });\n}\n\n/**\n * This tour will test that, for the demo certification allowing 2 attempts, a user can\n * try and fail twice and will no longer be able to take the certification.\n */\n\nimport { registry } from \"@web/core/registry\";\n\nvar patch = [{\n    content: \"Patching Survey Widget\",\n    trigger: 'body',\n    run: function(){\n        patchSurveyWidget();\n    }\n}]\n\nvar failSteps = [{ // Page-1\n    content: \"Clicking on Start Certification\",\n    trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Certification\")',\n}, { // Question: Do we sell Acoustic Bloc Screens?\n    content: \"Selecting answer 'No'\",\n    trigger: 'div.js_question-wrapper:contains(\"Do we sell Acoustic Bloc Screens\") label:contains(\"No\")',\n}, { // Question: Select all the existing products\n    content: \"Ticking answer 'Fanta'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Fanta\")'\n}, {\n    content: \"Ticking answer 'Drawer'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Drawer\")'\n}, {\n    content: \"Ticking answer 'Conference chair'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Conference chair\")'\n}, { // Question: Select all the available customizations for our Customizable Desk\n    content: \"Ticking answer 'Color'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Color\")'\n}, {\n    content: \"Ticking answer 'Height'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Height\")'\n}, { // Question: How many versions of the Corner Desk do we have?\n    content: \"Selecting answer '2'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many versions of the Corner Desk do we have\") label:contains(\"2\")',\n}, { // Question: Do you think we have missing products in our catalog? (not rated)\n    content: \"Missing products\",\n    trigger: 'div.js_question-wrapper:contains(\"Do you think we have missing products in our catalog\") textarea',\n    run: \"text I don't know products enough to be able to answer that\",\n}, { // Page-2 Question: How much do we sell our Cable Management Box?\n    content: \"Selecting answer '$80'\",\n    trigger: 'div.js_question-wrapper:contains(\"How much do we sell our Cable Management Box\") label:contains(\"$80\")',\n}, { // Question: Select all the products that sell for $100 or more\n    content: \"Ticking answer 'Corner Desk Right Sit'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Corner Desk Right Sit\")'\n}, {\n    content: \"Ticking answer 'Desk Combination'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Desk Combination\")'\n}, {\n    content: \"Ticking answer 'Office Chair Black'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Office Chair Black\")'\n}, { // Question: What do you think about our prices (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What do you think about our prices\") label:contains(\"Correctly priced\")',\n}, { // Page-3 Question: How many days is our money-back guarantee?\n    content: \"Inputting answer '60'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many days is our money-back guarantee\") input',\n    run: 'text 60'\n}, { // Question: If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it?\n    content: \"Inputting answer '01/06/2020'\",\n    trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it\") input',\n    run: 'text 01/06/2020'\n}, { // Question: If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire?\n    content: \"Inputting answer '01/06/2021 00:00:01'\",\n    trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire\") input',\n    run: 'text 01/06/2021 00:00:01'\n}, { // Question: What day to you think is best for us to start having an annual sale (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What day to you think is best for us to start having an annual sale (not rated)\") input',\n}, { // Question: What day and time do you think most customers are most likely to call customer service (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What day and time do you think most customers are most likely to call customer service (not rated)\") input',\n}, { // Question: How many chairs do you think we should aim to sell in a year (not rated)?\n    content: \"Inputting answer '0'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many chairs do you think we should aim to sell in a year (not rated)\") input',\n    run: 'text 0'\n}, {\n    content: \"Finish Survey\",\n    trigger: 'button[type=\"submit\"]',\n}];\n\nvar retrySteps = [{\n    trigger: 'a:contains(\"Retry\")'\n}];\n\nvar lastSteps = [{\n    trigger: 'h1:contains(\"Thank you!\")',\n    run: function () {\n        if ($('a:contains(\"Retry\")').length === 0) {\n            $('h1:contains(\"Thank you!\")').addClass('tour_success');\n        }\n    }\n}, {\n    trigger: 'h1.tour_success',\n    isCheck: true,\n}];\n\nregistry.category(\"web_tour.tours\").add('test_certification_failure', {\n    test: true,\n    url: '/survey/start/4ead4bc8-b8f2-4760-a682-1fde8daaaaac',\n    steps: () => [].concat(patch, failSteps, retrySteps, failSteps, lastSteps) });\n", "/** @odoo-module **/\n\n/**\n * Speed up fade-in fade-out to avoid useless delay in tests.\n */\nfunction patchSurveyWidget() {\n    const SurveyFormWidget = odoo.loader.modules.get('@survey/js/survey_form')[Symbol.for('default')]\n    SurveyFormWidget.include({\n        _submitForm: function () {\n            this.fadeInOutDelay = 0;\n            return this._super.apply(this, arguments);\n        }\n    });\n}\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('test_certification_success', {\n    test: true,\n    url: '/survey/start/4ead4bc8-b8f2-4760-a682-1fde8daaaaac',\n    steps: () => [{\n        content: \"Patching Survey Widget\",\n        trigger: 'body',\n        run: function(){\n            patchSurveyWidget();\n        }\n    }, { // Page-1\n        content: \"Clicking on Start Certification\",\n        trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Certification\")',\n    }, { // Question: Do we sell Acoustic Bloc Screens?\n        content: \"Selecting answer 'Yes'\",\n        trigger: 'div.js_question-wrapper:contains(\"Do we sell Acoustic Bloc Screens\") label:contains(\"Yes\")',\n    }, { // Question: Select all the existing products\n        content: \"Ticking answer 'Chair floor protection'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Chair floor protection\")'\n    }, {\n        content: \"Ticking answer 'Drawer'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Drawer\")'\n    }, {\n        content: \"Ticking answer 'Conference chair'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Conference chair\")'\n    }, { // Question: Select all the available customizations for our Customizable Desk\n        content: \"Ticking answer 'Color'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Color\")'\n    }, {\n        content: \"Ticking answer 'Legs'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Legs\")'\n    }, { // Question: How many versions of the Corner Desk do we have?\n        content: \"Selecting answer '2'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many versions of the Corner Desk do we have\") label:contains(\"2\")',\n    }, { // Question: Do you think we have missing products in our catalog? (not rated)\n        content: \"Missing products\",\n        trigger: 'div.js_question-wrapper:contains(\"Do you think we have missing products in our catalog\") textarea',\n        run: \"text I think we should make more versions of the customizable desk, it's such an amazing product!\",\n    }, { // Page-2 Question: How much do we sell our Cable Management Box?\n        content: \"Selecting answer '$80' (wrong one)\",\n        trigger: 'div.js_question-wrapper:contains(\"How much do we sell our Cable Management Box\") label:contains(\"$80\")',\n    }, { // Question: Select all the products that sell for $100 or more\n        content: \"Ticking answer 'Corner Desk Right Sit'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Corner Desk Right Sit\")'\n    }, {\n        content: \"Ticking answer 'Desk Combination'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Desk Combination\")'\n    }, {\n        content: \"Ticking answer 'Large Desk'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Large Desk\")'\n    }, { // Question: What do you think about our prices (not rated)?\n        content: \"Selecting answer 'Underpriced'\",\n        trigger: 'div.js_question-wrapper:contains(\"What do you think about our prices\") label:contains(\"Underpriced\")',\n    }, { // Page-3 Question: How many days is our money-back guarantee?\n        content: \"Inputting answer '30'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many days is our money-back guarantee\") input',\n        run: 'text 30'\n    }, { // Question: If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it?\n        content: \"Inputting answer '01/08/2020'\",\n        trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it\") input',\n        run: 'text 01/08/2020'\n    }, { // Question: If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire?\n        content: \"Inputting answer '01/07/2021 00:00:01'\",\n        trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire\") input',\n        run: 'text 01/07/2021 00:00:01'\n    }, { // Question: What day to you think is best for us to start having an annual sale (not rated)?\n        content: \"Inputting answer '01/01/2021'\",\n        trigger: 'div.js_question-wrapper:contains(\"What day to you think is best for us to start having an annual sale (not rated)\") input',\n        run: 'text 01/01/2021'\n    }, { // Question: What day and time do you think most customers are most likely to call customer service (not rated)?\n        content: \"Inputting answer '01/01/2021 13:00:01'\",\n        trigger: 'div.js_question-wrapper:contains(\"What day and time do you think most customers are most likely to call customer service (not rated)\") input',\n        run: 'text 01/01/2021 13:00:01'\n    }, { // Question: How many chairs do you think we should aim to sell in a year (not rated)?\n        content: \"Inputting answer '1000'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many chairs do you think we should aim to sell in a year (not rated)\") input',\n        run: 'text 1000'\n    }, {\n        content: \"Finish Survey\",\n        trigger: 'button[type=\"submit\"]',\n    }, {\n        content: \"Thank you\",\n        trigger: 'h1:contains(\"Thank you!\")',\n    }, {\n        content: \"test passed\",\n        trigger: 'div:contains(\"Congratulations, you have passed the test!\")',\n        isCheck: true,\n    }\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('test_survey', {\n    test: true,\n    url: '/survey/start/b137640d-14d4-4748-9ef6-344caaaaaae',\n    steps: () => [\n    // Page-1\n    {\n        content: 'Click on Start',\n        trigger: 'button.btn:contains(\"Start\")',\n    }, {\n        content: 'Answer Where do you live',\n        trigger: 'div.js_question-wrapper:contains(\"Where do you live\") input',\n        run: 'text Mordor-les-bains',\n    }, {\n        content: 'Answer Where do you live',\n        trigger: 'div.js_question-wrapper:contains(\"When is your date of birth\") input',\n        run: 'text 05/05/1980',\n    }, {\n        content: 'Answer How frequently do you buy products online',\n        trigger: 'div.js_question-wrapper:contains(\"How frequently do you buy products online\") label:contains(\"Once a month\")',\n    }, {\n        content: 'Answer How many times did you order products on our website',\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website\") input',\n        run: 'text 12',\n    }, {\n        content: 'Submit and go to Next Page',\n        trigger: 'button[value=\"next\"]',\n    },\n    // Page-2\n    {\n        content: 'Answer Which of the following words would you use to describe our products (High Quality)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\")',\n    }, {\n        content: 'Answer Which of the following words would you use to describe our products (Good value for money)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\")',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The new layout and design is fresh and up-to-date)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") td:first',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (It is easy to find the product that I want)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The tool to compare the products is useful to make a choice)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") td:eq(3)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The checkout process is clear and secure)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (I have added products to my wishlist)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") td:last',\n    }, {\n        content: 'Answer Do you have any other comments, questions, or concerns',\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: 'text This is great. Really.',\n    }, {\n        content: 'Click Submit and finish the survey',\n        trigger: 'button[value=\"finish\"]',\n    },\n    // Final page\n    {\n        content: 'Thank you',\n        trigger: 'h1:contains(\"Thank you!\")',\n        isCheck: true,\n    }\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { TourError } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('test_survey_chained_conditional_questions', {\n    test: true,\n    url: '/survey/start/3cfadce3-3f7e-41da-920d-10fa0eb19527',\n    steps: () => [\n    {\n        content: 'Click on Start',\n        trigger: 'button.btn:contains(\"Start\")',\n    }, {\n        content: 'Answer Q1 with Answer 1',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 1\")',\n    }, {\n        content: 'Answer Q2 with Answer 1',\n        trigger: 'div.js_question-wrapper:contains(\"Q2\") label:contains(\"Answer 1\")',\n        extra_trigger: 'div.js_question-wrapper:contains(\"Q4\")',\n    }, {\n        content: 'Answer Q3 with Answer 1',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\") label:contains(\"Answer 1\")',\n    }, {\n        content: 'Answer Q1 with Answer 3',  // This should hide Q2 and Q4 but not Q3.\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 3\")',\n    }, {\n        content: 'Check that Q2 was hidden',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\")',\n        run : () => {\n            expectHiddenQuestion(\"Q2\");\n            expectHiddenQuestion(\"Q4\");\n        },\n    }, {\n        content: 'Answer Q3 with Answer 2',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Answer Q1 with Answer 2',  // This should hide all other questions.\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Check that only question 1 is now visible',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        run : () => {\n            expectHiddenQuestion(\"Q2\", \"Q2's trigger is gone.\");\n            expectHiddenQuestion(\"Q3\", \"No reason to show it now.\");\n            expectHiddenQuestion(\"Q4\", \"No reason to show it now.\");\n        },\n    }, {\n        content: 'Answer Q1 with Answer 3',  // This shows Q3.\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 3\")',\n    }, {\n        content: 'Check that questions Q2 and Q4 are hidden',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        run : () => {\n            expectHiddenQuestion(\"Q2\", \"Q2 should stay hidden.\");\n            expectHiddenQuestion(\"Q4\", \"Q4 should stay hidden.\");\n        },\n    }, {\n        content: 'Answer Q3 with Answer 2',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Answer Q1 with Answer 2',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Check that only question 1 is now the only one visible again',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        run : () => {\n            expectHiddenQuestion(\"Q2\", \"Q2's trigger is gone, again.\");\n            expectHiddenQuestion(\"Q3\", \"As Q2's gone, so should this one.\");\n            expectHiddenQuestion(\"Q4\", \"No reason to show it now.\");\n        },\n    }, {\n        content: 'Click Submit and finish the survey',\n        trigger: 'button[value=\"finish\"]',\n    },\n    // Final page\n    {\n        content: 'Thank you',\n        trigger: 'h1:contains(\"Thank you!\")',\n        isCheck: true,\n    }\n\n]});\n\nexport function expectHiddenQuestion (questionTitle, msg){\n    if ($(`div.js_question-wrapper.d-none:contains('${questionTitle}')`).length !== 1) {\n        throw new TourError(msg);\n    }\n}\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { expectHiddenQuestion } from \"@survey/../tests/tours/survey_chained_conditional_questions\";\n\nregistry.category(\"web_tour.tours\").add('test_survey_conditional_question_on_different_page', {\n    test: true,\n    url: '/survey/start/1cb935bd-2399-4ed1-9e10-c649318fb4dc',\n    steps: () => [\n        {\n            content: 'Click on Start',\n            trigger: 'button.btn:contains(\"Start\")',\n        }, {\n            content: 'Answer Q1 with Answer 1',\n            trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 1\")',\n        }, {\n            content: 'Go to next page',\n            trigger: 'button[value=\"next\"]',\n        }, {\n            content: 'Check that Q3 is visible',\n            trigger: 'div.js_question-wrapper:contains(\"Q3\")',\n            isCheck: true,\n        }, {\n            content: 'Answer Q2 with Answer 2',\n            trigger: 'div.js_question-wrapper:contains(\"Q2\") label:contains(\"Answer 2\")',\n        }, {\n            content: 'Check that Q3 is still visible',\n            trigger: 'div.js_question-wrapper:contains(\"Q3\")',\n            isCheck: true,\n        }, {\n            content: 'Go back',\n            trigger: 'button[value=\"previous\"]',\n        }, {\n            content: 'Answer Q1 with Answer 2',\n            trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 2\")',\n        }, {\n            content: 'Go to next page',\n            trigger: 'button[value=\"next\"]',\n        }, {\n            content: 'Check that Q3 is hidden',\n            trigger: 'div.js_question-wrapper:contains(\"Q2\")',\n            run : () => expectHiddenQuestion(\"Q3\", \"Q3 should be hidden as q1_a1 trigger is not selected anymore\"),\n        }, {\n            content: 'Answer Q2 with Answer 1',\n            trigger: 'div.js_question-wrapper:contains(\"Q2\") label:contains(\"Answer 1\")',\n        }, {\n            content: 'Check that Q3 is now visible again',\n            trigger: 'div.js_question-wrapper:contains(\"Q3\")',\n            isCheck: true,\n        }\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('survey_tour_test_survey_form_triggers', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(),\n    {\n        content: 'Go to Survey',\n        trigger: '.o_app[data-menu-xmlid=\"survey.menu_surveys\"]',\n    }, {\n        content: \"Create a new survey\",\n        trigger: \".o-kanban-button-new\",\n    }, {\n        content: \"Set the Survey's title\",\n        trigger: \".o_field_widget[name=title] textarea\",\n        run: \"text Test survey\",\n    }, {\n        content: \"Add a first question\",\n        trigger: \"td.o_field_x2many_list_row_add a\",\n    }, {\n        content: \"Set the first question's title\",\n        trigger: \".modal-content .o_field_widget[name=title] input\",\n        run: \"text Question 1\",\n    },\n    ...addTwoAnswers(),\n    ...saveAndNew(),\n    {\n        content: \"Set the second question's title\",\n        trigger: \".o_field_widget[name=title] input\",\n        run: \"text Question 2\",\n        in_modal: true,\n    },\n    ...addTwoAnswers(),\n    ...changeTab(\"options\"),\n    {\n        content: \"Set a trigger for the first question\",\n        trigger: \".o_field_widget[name=triggering_answer_ids] input\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Set the first question's first answer as trigger\",\n        trigger: 'ul.ui-autocomplete a:contains(\"Question 1 : Answer A\")',\n        run: 'click',\n        in_modal: true,\n    },\n    ...changeTab(\"answers\"),\n    ...saveAndNew(),\n    {\n        content: \"Set the third question's title\",\n        trigger: \".o_field_widget[name=title] input\",\n        run: \"text Question 3\",\n        in_modal: true,\n    },\n    ...addTwoAnswers(),\n    ...changeTab(\"options\"),\n    {\n        content: \"Set a trigger for the second question\",\n        trigger: \".o_field_widget[name=triggering_answer_ids] input\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Set the second question's second answer as trigger\",\n        trigger: 'ul.ui-autocomplete a:contains(\"Question 2 : Answer B\")',\n        run: 'click',\n        in_modal: true,\n    },\n    ...stepUtils.saveForm(),\n    {\n        content: \"Check that Question 2 has 'normal' trigger icon\",\n        trigger: \"tr:contains('Question 2') button i.fa-code-fork\",\n        isCheck: true,\n    }, {\n        content: \"Check that Question 3 has 'normal' trigger icon\",\n        trigger: \"tr:contains('Question 3') button i.fa-code-fork\",\n        isCheck: true,\n    }, {\n        content: \"Move Question 3 above its trigger (Question 2)\",\n        trigger: \"tr.o_data_row:nth-child(3) td[name=sequence]\",\n        run: \"drag_and_drop_native div[name=question_and_page_ids] table tbody tr:nth-child(2)\",\n    }, {\n        content: \"Check that Question 3 has 'warning' trigger icon\",\n        trigger: \"tr:contains('Question 3') button i.fa-exclamation-triangle\",\n        isCheck: true,\n    }, {\n        content: \"Open that question to check the server's misplacement evaluation agrees\",\n        trigger: \"tr.o_data_row td:contains('Question 3')\",\n        run: \"click\",\n    }, {\n        content: \"Check that an alert is shown\",\n        trigger: \".o_form_sheet_bg div:first-child.alert-warning:contains('positioned before some or all of its triggers')\",\n        in_modal: true,\n    },\n    ...changeTab(\"options\"),\n    {\n        content: \"Remove invalid trigger\",\n        trigger: \".o_field_widget[name=triggering_answer_ids] span:contains('Question 2') a.o_delete\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Check that the alert is gone\",\n        trigger: `.o_form_sheet_bg div:first-child:not(.alert-warning).o_form_sheet`,\n        in_modal: true,\n        isCheck: true,\n    }, {\n        content: \"Choose a new valid trigger\",\n        trigger: \".o_field_widget[name=triggering_answer_ids] input\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Set the first question's second answer as trigger, then\",\n        trigger: 'ul.ui-autocomplete a:contains(\"Question 1 : Answer B\")',\n        run: 'click',\n    },\n    ...stepUtils.saveForm(),\n    {\n        content: \"Check that Question 3 has its 'normal' trigger icon back\",\n        trigger: \"tr:contains('Question 3') button i.fa-code-fork\",\n        isCheck: true,\n    }, {\n        content: \"Move Question 3 back below Question 2\",\n        trigger: \"tr.o_data_row:nth-child(2) td[name=sequence]\",\n        run: \"drag_and_drop_native div[name=question_and_page_ids] table tbody tr:nth-child(3)\",\n    }, {\n        content: \"Open that question again\",\n        trigger: \"tr.o_data_row td:contains('Question 3')\",\n        run: \"click\",\n    },\n    ...changeTab(\"options\"),\n    {\n        content: \"Add a second trigger to confirm we can now use Question 2 again\",\n        trigger: \".modal-content .o_field_widget[name=triggering_answer_ids] input\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Add the second question's second answer as trigger, then\",\n        trigger: '.modal-content ul.ui-autocomplete a:contains(\"Question 2 : Answer B\")',\n        run: \"click\",\n    },\n    ...stepUtils.saveForm(),\n    // Move question 1 below question 3,\n    {\n        content: \"Move Question 1 back below Question 3\",\n        trigger: \"tr.o_data_row:nth-child(1) td[name=sequence]\",\n        run: \"drag_and_drop_native div[name=question_and_page_ids] table tbody tr:nth-child(3)\",\n    }, {\n        content: \"Check that Question 3 has 'warning' trigger icon\",\n        trigger: \"tr:contains('Question 3') button i.fa-exclamation-triangle\",\n        isCheck: true,\n    }, {\n        content: \"Open that question again\",\n        trigger: \"tr.o_data_row td:contains('Question 3')\",\n        run: \"click\",\n    }, {\n        content: \"Check that an alert is shown also when only one trigger is misplaced\",\n        trigger: \".o_form_sheet_bg div:first-child.alert-warning:contains('positioned before some or all of its triggers')\",\n        in_modal: true,\n    },\n    ...changeTab(\"options\"),\n    {\n        content: \"Remove temporarily used trigger\",\n        trigger: \".o_field_widget[name=triggering_answer_ids] span:contains('Question 1') a.o_delete\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Check that the alert is gone in this case too\",\n        trigger: `.o_form_sheet_bg div:first-child:not(.alert-warning).o_form_sheet`,\n        in_modal: true,\n        isCheck: true,\n    },\n    ...stepUtils.saveForm(),\n    {\n        content: \"Check that Question 3 has its 'normal' trigger icon back\",\n        trigger: \"tr:contains('Question 3') button i.fa-code-fork\",\n        isCheck: true,\n    }, {\n        content: \"Move Question 1 back above Question 2\",\n        trigger: \"tr.o_data_row:nth-child(3) td[name=sequence]\",\n        run: \"drag_and_drop_native div[name=question_and_page_ids] table tbody tr:nth-child(1)\",\n    },\n    // Deleting trigger answers or whole question gracefully remove the trigger automatically\n    {\n        content: \"Open Question 2 again\",\n        trigger: \"tr.o_data_row td:contains('Question 2')\",\n        run: \"click\",\n    }, {\n        content: \"Delete Answer B\",\n        trigger: \"div[name=suggested_answer_ids] tr:contains('Answer B') button[name=delete]\",\n    },\n    ...stepUtils.saveForm(),\n    {\n        content: \"Check that Question 3 no longer has a trigger icon\",\n        trigger: \"div[name=question_and_page_ids] tr:contains('Question 3') div.o_widget_survey_question_trigger:not(:has(button))\",\n        allowInvisible: true,\n        isCheck: true,\n    }, {\n        content: \"Check that Question 2 however still has a trigger icon\",\n        trigger: \"tr:contains('Question 2') button i.fa-code-fork\",\n        isCheck: true,\n    }, {\n        content: \"Delete Question 1\",\n        trigger: \"tr:contains('Question 1') button[name=delete]\",\n        run: \"click\",\n    }, {\n        content: \"Check that now Question 2 too does no longer have a trigger icon\",\n        trigger: \"tr:contains('Question 2') div.o_widget_survey_question_trigger:not(:has(button))\",\n        allowInvisible: true,\n        isCheck: true,\n    }, {\n        content: 'Go back to Kanban View',\n        trigger: '[data-menu-xmlid=\"survey.menu_survey_form\"]',\n    }, {\n        content: \"Check that we arrived on the kanban view\",\n        trigger: \".o-kanban-button-new\",\n        isCheck: true,\n    }\n]});\n\nfunction addTwoAnswers() {\n    return [\n        {\n            content: \"Add the first answer\",\n            trigger: \"div[name=suggested_answer_ids] .o_field_x2many_list_row_add a\",\n            in_modal: true,\n        }, {\n            trigger: 'tr.o_selected_row div[name=value] input',\n            run: 'text Answer A',\n            in_modal: true,\n        }, {\n            content: \"Add the second answer\",\n            trigger: \"div[name=suggested_answer_ids] .o_field_x2many_list_row_add a\",\n            in_modal: true,\n        }, {\n            trigger: 'tr:nth-child(2).o_selected_row div[name=value] input',\n            run: 'text Answer B',\n            in_modal: true,\n        }\n    ];\n}\n\nfunction saveAndNew() {\n    return [\n        {\n            content: \"Click Save & New\",\n            trigger: \"button.o_form_button_save_new\",\n            in_modal: true,\n        }, {\n            content: \"Wait for the dialog to render new question form\",\n            // suggested_answer_ids required even though in_modal is specified...\n            trigger: \"div[name=suggested_answer_ids] .o_list_table tbody tr:first-child:not(.o_data_row)\", // empty answers list\n            in_modal: true,\n            isCheck: true,\n        }\n    ];\n}\n\n\nfunction changeTab(tabName) {\n    // Currently, .modal-content is required even though \"in_modal\"\n    return [\n        {\n            content: `Go to ${tabName} tab`,\n            trigger: `.modal-content a[name=${tabName}].nav-link`,\n            in_modal: true\n        }, {\n            content: `Wait for tab ${tabName} tab`,\n            trigger: `.modal-content a[name=${tabName}].nav-link.active`,\n            in_modal: true,\n            isCheck: true,\n        }\n    ];\n}\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('test_survey_prefill', {\n    test: true,\n    url: '/survey/start/b137640d-14d4-4748-9ef6-344caaaaaae',\n    steps: () => [{      // Page-1\n        trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Survey\")',\n    }, { // Question: Where do you live?\n        trigger: 'div.js_question-wrapper:contains(\"Where do you live?\") input',\n        run: 'text Grand-Rosiere',\n    }, { // Question: When is your date of birth?\n        trigger: 'div.js_question-wrapper:contains(\"When is your date of birth?\") input',\n        run: 'text 05/05/1980',\n    }, { // Question: How frequently do you buy products online?\n        trigger: 'div.js_question-wrapper:contains(\"How frequently do you buy products online?\") label:contains(\"Once a week\")',\n    }, { // Question: How many times did you order products on our website?\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website?\") input',\n        run: 'text 42',\n    }, {\n        content: 'Click on Next Page',\n        trigger: 'button[value=\"next\"]',\n    },\n    // Page-2\n    { // Question: Which of the following words would you use to describe our products?\n        content: 'Answer Which of the following words would you use to describe our products (High Quality)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\")',\n    }, {\n        content: 'Answer Which of the following words would you use to describe our products (Good value for money)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\")',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The new layout and design is fresh and up-to-date)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") td:first',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (It is easy to find the product that I want)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The tool to compare the products is useful to make a choice)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") td:eq(3)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The checkout process is clear and secure)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (I have added products to my wishlist)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") td:last',\n    }, {\n        content: 'Answer Do you have any other comments, questions, or concerns',\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: 'text Is the prefill working?',\n    }, {\n        // Go back to previous page\n        content: 'Click on the previous page name in the breadcrumb',\n        trigger: 'ol.breadcrumb a:first',\n    }, {\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website?\") input',\n        run: function () {\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"How many times did you order products on our website?\") input');\n            if ($inputQ3.val() === '42.0') {\n                $('.o_survey_title').addClass('prefilled');\n            }\n        }\n    }, {\n        trigger: '.o_survey_title.prefilled',\n        run: function () {\n            // check that all the answers are prefilled in Page 1\n            var $inputQ1 = $('div.js_question-wrapper:contains(\"Where do you live?\") input');\n            if ($inputQ1.val() !== 'Grand-Rosiere') {\n                return;\n            }\n\n            var $inputQ2 = $('div.js_question-wrapper:contains(\"When is your date of birth?\") input');\n            if ($inputQ2.val() !== '05/05/1980') {\n                return;\n            }\n\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"How frequently do you buy products online?\") label:contains(\"Once a week\") input');\n            if (!$inputQ3.is(':checked')) {\n                return;\n            }\n\n            var $inputQ4 = $('div.js_question-wrapper:contains(\"How many times did you order products on our website?\") input');\n            if ($inputQ4.val() !== '42.0') {\n                return;\n            }\n\n            $('.o_survey_title').addClass('tour_success');\n        }\n    }, {\n        trigger: '.o_survey_title.tour_success'\n    }, {\n        content: 'Click on Next Page',\n        trigger: 'button[value=\"next\"]',\n    }, {\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: function () {\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea');\n            if ($inputQ3.val() === \"Is the prefill working?\") {\n                $('.o_survey_title').addClass('prefilled2');\n            }\n        }\n    }, {\n        trigger: '.o_survey_title.prefilled2',\n        run: function () {\n            // check that all the answers are prefilled in Page 2\n            var $input1Q1 = $('div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\") input');\n            if (!$input1Q1.is(':checked')) {\n                return;\n            }\n\n            var $input2Q1 = $('div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\") input');\n            if (!$input2Q1.is(':checked')) {\n                return;\n            }\n\n            var $input1Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") input:first');\n            if (!$input1Q2.is(':checked')) {\n                return;\n            }\n\n            var $input2Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") input:eq(2)');\n            if (!$input2Q2.is(':checked')) {\n                return;\n            }\n\n            var $input3Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") input:eq(3)');\n            if (!$input3Q2.is(':checked')) {\n                return;\n            }\n\n            var $input4Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") input:eq(2)');\n            if (!$input4Q2.is(':checked')) {\n                return;\n            }\n\n            var $input5Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") input:last');\n            if (!$input5Q2.is(':checked')) {\n                return;\n            }\n\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea');\n            if ($inputQ3.val() !== \"Is the prefill working?\") {\n                return;\n            }\n\n            $('.o_survey_title').addClass('tour_success_2');\n        }\n    }, {\n        trigger: '.o_survey_title.tour_success_2',\n        isCheck: true,\n    }\n]});\n", "/** @odoo-module **/\n\nimport { registry } from '@web/core/registry';\n\nregistry.category('web_tour.tours').add('test_survey_roaming_mandatory_questions', {\n    test: true,\n    url: '/survey/start/853ebb30-40f2-43bf-a95a-bbf0e367a365',\n    steps: () => [{\n        content: 'Click on Start',\n        trigger: 'button.btn:contains(\"Start\")',\n    }, {\n        content: 'Skip question Q1',\n        trigger: 'button.btn:contains(\"Continue\")',\n    }, {\n        content: 'Skip question Q2',\n        extra_trigger: 'div.js_question-wrapper:contains(\"Q2\")',\n        trigger: 'button.btn:contains(\"Continue\")',\n    }, {\n        content: 'Check if Q3 button is Submit',\n        trigger: 'button.btn:contains(\"Submit\")',\n        isCheck: true,\n    }, {\n        content: 'Go back to Q2',\n        trigger: 'button.btn[value=\"previous\"]',\n    }, {\n        content: 'Check if the alert box is present',\n        trigger: 'div.o_survey_question_error span',\n        isCheck: true,\n    }, {\n        content: 'Skip question Q2 again',\n        trigger: 'button.btn:contains(\"Continue\")',\n    }, {\n        content: 'Answer Q3',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\") label:contains(\"Answer 1\")',\n    }, {\n        content: 'Click on Submit',\n        trigger: 'button.btn:contains(\"Submit\")',\n    }, {\n        content: 'Check if question is Q1',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        isCheck: true,\n    }, {\n        content: 'Click on \"Next Skipped\" button',\n        trigger: 'button.btn:contains(\"Next Skipped\")',\n    }, {\n        content: 'Check if question is Q2',\n        trigger: 'div.js_question-wrapper:contains(\"Q2\")',\n        isCheck: true,\n    }, {\n        content: 'Click on \"Next Skipped\" button',\n        trigger: 'button.btn:contains(\"Next Skipped\")',\n    }, {\n        content: 'Check if question is Q1 again (should loop on skipped questions)',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        isCheck: true,\n    }, {\n        content: 'Answer Q1',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Check if the visible question is the skipped question Q2',\n        trigger: 'div.js_question-wrapper:contains(\"Q2\")',\n        isCheck: true,\n    }, {\n        content: 'Answer Q2',\n        trigger: 'div.js_question-wrapper:contains(\"Q2\") label:contains(\"Answer 3\")',\n    }, {\n        content: 'Click on Submit',\n        trigger: 'button.btn:contains(\"Submit\")',\n    }, {\n        content: 'Check if the survey is done',\n        trigger: 'div.o_survey_finished h1:contains(\"Thank you!\")',\n        isCheck: true,\n    }],\n});\n", "/** @odoo-module **/\n\nfunction patchSessionManager() {\n    const { DateTime } = luxon;\n    const SessionManager = odoo.loader.modules.get('@survey/js/survey_session_manage')[Symbol.for('default')]\n    /**\n     * Small override for test/tour purposes.\n     */\n    SessionManager.include({\n        /**\n         * - Trigger the fetch of answer results immediately at the start.\n         * (Instead of wasting 2 seconds waiting after the start).\n         * - Set the fade in/out time to 1 ms to avoid unnecessary delays.\n         * - Avoid refreshing the results every 2 seconds\n         */\n        start: function () {\n            var self = this;\n            return this._super.apply(this, arguments)\n                .then(this._refreshResults.bind(this))\n                .then(function () {\n                    self.fadeInOutTime = 1;\n                    clearInterval(self.resultsRefreshInterval);\n                });\n        },\n\n        /**\n         * Force the timer to \"now\" to avoid introducing potential test breaking\n         * timely variables (rpc/small server delay/...) if the start_question_time flickers.\n         */\n        _startTimer: function () {\n            this.$el.data('timer', DateTime.utc());\n            return this._super.apply(this, arguments);\n        }\n    })\n};\n\n\n\nexport default patchSessionManager;\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { zip } from \"@web/core/utils/arrays\";\nimport { TourError } from \"@web_tour/tour_service/tour_utils\";\nimport { accessSurveysteps } from \"./survey_tour_session_tools\";\n\nlet rootWidget = null;\n\n/**\n * Since the chart is rendered using SVG, we can't use jQuery triggers to check if everything\n * is correctly rendered.\n * This helper method returns the chart data (Chartjs framework specific) in the following structure:\n * [{ value, backgroundColor, labelColor }]\n */\nconst getChartData = () => {\n    const chartData = [];\n    const surveyManagePublicWidget = rootWidget.publicWidgets.find((widget) => {\n        return widget.$el.hasClass('o_survey_session_manage');\n    });\n\n    if (!surveyManagePublicWidget) {\n        return chartData;\n    }\n\n    surveyManagePublicWidget.resultsChart.chart.data.datasets[0].data.forEach((value, index)=> {\n        chartData.push({\n            value: value,\n            backgroundColor: surveyManagePublicWidget.resultsChart._getBackgroundColor({dataIndex: index}),\n            labelColor: surveyManagePublicWidget.resultsChart._getLabelColor({dataIndex: index}),\n        });\n    });\n\n    return chartData;\n};\n\nconst nextScreen = () => {\n    const e = $.Event('keydown');\n    e.key = \"ArrowRight\";\n    $(document).trigger(e);\n};\n\nconst previousScreen = () => {\n    const e = $.Event('keydown');\n    e.key = \"ArrowLeft\";\n    $(document).trigger(e);\n};\n\nconst REGULAR_ANSWER_COLOR = '#212529';\nconst CORRECT_ANSWER_COLOR = '#2CBB70';\nconst WRONG_ANSWER_COLOR = '#D9534F';\n\nconst INDEX_TO_ORDINAL = {\n    0: 'First',\n    1: 'Second',\n    2: 'Third',\n    3: 'Fourth',\n};\n\n/**\n * Check answer appearance (opacity and color).\n *\n * @param {string} answerLabel\n * @param {{backgroundColor: string, labelColor: string, value?: number}} shownAnswer\n * @param {\"correct\"|\"incorrect\"|\"regular\"} expectedAnswerType\n */\nconst checkAnswerAppearance = (answerLabel, shownAnswer, expectedAnswerType) => {\n    if (expectedAnswerType === 'correct') {\n        if (!shownAnswer.backgroundColor.includes('0.8') || shownAnswer.labelColor !== CORRECT_ANSWER_COLOR) {\n            throw new TourError(`${answerLabel} should be shown as \"correct\"!`);\n        }\n    } else if (expectedAnswerType === 'incorrect') {\n        if (!shownAnswer.backgroundColor.includes('0.2') || shownAnswer.labelColor !== WRONG_ANSWER_COLOR) {\n            throw new TourError(`${answerLabel} should be shown as \"incorrect\"!`);\n        }\n    } else if (expectedAnswerType === 'regular') {\n        if (!shownAnswer.backgroundColor.includes('0.8') || shownAnswer.labelColor !== REGULAR_ANSWER_COLOR) {\n            throw new TourError(`${answerLabel} should not be shown as \"correct\" or \"incorrect\"!`);\n        }\n    } else {\n        throw new Error(`Unsupported answer type.`);\n    }\n};\n\nconst checkAnswerValue = (answerLabel, shownAnswerValue, expectedAnswerValue) => {\n    if (shownAnswerValue !== expectedAnswerValue) {\n        throw new TourError(expectedAnswerValue === 0 ?\n            `${answerLabel} should not be picked by any user!` :\n            `${answerLabel} should be picked by ${expectedAnswerValue} users!`\n        );\n    }\n};\n\n/**\n * Check the answers count, values and appearance.\n *\n * @param {{value: number, backgroundColor: string, color: string}[]} chartData Data returned by `getChartData`.\n * @param {{value: number, type: \"correct\" | \"incorrect\" | \"regular\"}[]} expectedAnswersData\n */\nconst checkAnswers = (chartData, expectedAnswersData) => {\n    checkAnswersCount(chartData, expectedAnswersData.length);\n\n    zip(chartData, expectedAnswersData).forEach(([shownAnswerData, expectedAnswerData], answerIndex) => {\n        const answerLabel = `${INDEX_TO_ORDINAL[answerIndex]} answer`;\n        checkAnswerValue(answerLabel, shownAnswerData.value, expectedAnswerData.value);\n        checkAnswerAppearance(answerLabel, shownAnswerData, expectedAnswerData.type);\n    });\n};\n\nconst checkAnswersAllZeros = (chartData) => {\n    if (chartData.find(answerData => answerData !== 0).length) {\n        throw new TourError('Chart data should all be 0!');\n    }\n};\n\nconst checkAnswersCount = (chartData, expectedCount) => {\n    if (chartData.length !== expectedCount) {\n        throw new TourError(`Chart data should contain ${expectedCount} records!`);\n    }\n};\n\n/**\n * Tour that will test the whole survey session from the host point of view.\n *\n * Break down of the main points:\n * - Open the 'session manager' (the session was already created by a previous tour)\n * - Display the nickname question, and move to the next one (as answers are not displayed)\n * - Check answers are correctly displayed for the 3 'simple' question types (text, date, datetime)\n * - Move to the choice question and check that answers are displayed\n *   (The check is rather complex, see 'getChartData' for details)\n * - If everything is correctly displayed, move to the next question\n * - On the scored choice question, check that the screens are correctly chained:\n *   no results displayed -> results displayed -> correct/incorrect answers -> leaderboard\n * - On the scored + timed multiple choice question, check the same than previous question,\n *   except that the results are supposed to be displayed automatically when the question timer runs out\n * - Test the 'back' behavior and check that screens are reversed correctly\n * - Check that our final leaderboard is correct based on attendees answers\n * - Close the survey session\n */\nregistry.category(\"web_tour.tours\").add('test_survey_session_manage_tour', {\n    url: \"/web\",\n    test: true,\n    steps: () => [].concat(accessSurveysteps, [{\n    trigger: 'button[name=\"action_open_session_manager\"]',\n}, {\n    trigger: 'h1:contains(\"Nickname\")',\n    isCheck: true // check nickname question is displayed\n}, {\n    trigger: 'body',\n    run: async () => { rootWidget = await odoo.loader.modules.get('root.widget'); }\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: 'h1:contains(\"Text Question\")',\n    isCheck: true // check text question is displayed\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"3 / 3\")',\n    isCheck: true // check we have 3 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 1 is the best\")',\n    isCheck: true // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 2 rulez\")',\n    isCheck: true // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 3 will crush you\")',\n    isCheck: true // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    isCheck: true // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010\")',\n    isCheck: true // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011\")',\n    isCheck: true // check attendee 2 answer is displayed\n}, {\n    trigger: 'h1',\n    run: previousScreen\n}, {\n    trigger: 'h1:contains(\"Text Question\")',\n    isCheck: true // check text question is displayed\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"3 / 3\")',\n    isCheck: true // check we have 3 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 1 is the best\")',\n    isCheck: true // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 2 rulez\")',\n    isCheck: true // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 3 will crush you\")',\n    isCheck: true // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    isCheck: true // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010\")',\n    isCheck: true // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011\")',\n    isCheck: true // check attendee 2 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    isCheck: true // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010 10:00:00\")',\n    isCheck: true // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011 15:55:55\")',\n    isCheck: true // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: 'h1:contains(\"Regular Simple Choice\")',\n    // Wait for answers' data to be fetched (see commit message).\n    extra_trigger: '.o_survey_session_progress_small[style*=\"width: 100%\"]',\n    run: () => {\n        checkAnswers(getChartData(), [\n            {value: 2, type: \"regular\"},\n            {value: 1, type: \"regular\"},\n            {value: 0, type: \"regular\"},\n        ]);\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Scored Simple Choice\")',\n    run: () => {\n        const chartData = getChartData();\n        checkAnswersCount(chartData, 4);\n        checkAnswersAllZeros(chartData);\n\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Scored Simple Choice\")',\n    // Wait for progressbar to be updated (\"late\" enough DOM change after onNext() is triggered).\n    extra_trigger: '.o_survey_session_progress_small[style*=\"width: 100%\"]',\n    run: () => {\n        checkAnswers(getChartData(), [\n            {value: 1, type: \"regular\"},\n            {value: 1, type: \"regular\"},\n            {value: 1, type: \"regular\"},\n            {value: 0, type: \"regular\"},\n        ]);\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Scored Simple Choice\")',\n    // Wait for Button to be updated (\"late\" enough DOM change after onNext() is triggered).\n    extra_trigger: '.o_survey_session_navigation_next_label:contains(\"Show Leaderboard\")',\n    run: () => {\n        checkAnswers(getChartData(), [\n            {value: 1, type: \"correct\"},\n            {value: 1, type: \"incorrect\"},\n            {value: 1, type: \"incorrect\"},\n            {value: 0, type: \"incorrect\"},\n        ]);\n        nextScreen();\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Timed Scored Multiple Choice\")',\n    run: ()=> {\n        const chartData = getChartData();\n        checkAnswersCount(chartData, 3);\n        checkAnswersAllZeros(chartData);\n\n        // after 1 second, results are displayed automatically because question timer runs out\n        // we add 1 extra second because of the way the timer works:\n        // it only triggers the time_up event 1 second AFTER the delay is passed\n        setTimeout(() => {\n            checkAnswers(getChartData(), [\n                {value: 2, type: \"regular\"},\n                {value: 2, type: \"regular\"},\n                {value: 1, type: \"regular\"},\n            ]);\n\n            nextScreen();\n            checkAnswers(getChartData(), [\n                {value: 2, type: \"correct\"},\n                {value: 2, type: \"correct\"},\n                {value: 1, type: \"incorrect\"},\n            ]);\n\n            nextScreen();\n        }, 2100);\n    }\n}, {\n    trigger: 'h1:contains(\"Final Leaderboard\")',\n    isCheck: true // Final Leaderboard is displayed\n}, {\n    trigger: 'h1',\n    run: () => {\n        // previous screen testing\n        previousScreen();\n        checkAnswers(getChartData(), [\n            {value: 2, type: \"correct\"},\n            {value: 2, type: \"correct\"},\n            {value: 1, type: \"incorrect\"},\n        ]);\n\n        previousScreen();\n        checkAnswers(getChartData(), [\n            {value: 2, type: \"regular\"},\n            {value: 2, type: \"regular\"},\n            {value: 1, type: \"regular\"},\n        ]);\n\n        previousScreen();\n        checkAnswersAllZeros(getChartData());\n\n        // Now we go forward to the \"Final Leaderboard\" again (3 times)\n        for (let i = 0; i < 3; i++) {\n            nextScreen();\n        }\n    }\n}, {\n    trigger: 'h1:contains(\"Final Leaderboard\")',\n    isCheck: true // Final Leaderboard is displayed\n}, {\n    trigger: '.o_survey_session_close:has(\"i.fa-close\")'\n}, {\n    trigger: 'button[name=\"action_start_session\"]',\n    isCheck: true // check that we can start another session\n}])});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { accessSurveysteps } from \"./survey_tour_session_tools\";\n\n/**\n * Small tour that will open the session manager and check\n * that the attendees are accounted for, then start the session\n * by going to the first question.\n */\nregistry.category(\"web_tour.tours\").add('test_survey_session_start_tour', {\n    url: \"/web\",\n    test: true,\n    steps: () => [].concat(accessSurveysteps, [{\n    trigger: 'button[name=\"action_open_session_manager\"]',\n}, {\n    trigger: '.o_survey_session_attendees_count:contains(\"3\")',\n    run: function () {\n        /* We want to test 2 things: (1) that the attendees count is right\n           on the rendered xml template and (2) that the attendees count\n           gets correctly updated every 2 seconds via JS.\n\n           This step did verify the one on the xml template, we now change\n           the value back to 0 to test that in 2 seconds it'll be updated\n           by JS.\n\n           The \"waitrpc\" class just serves to rule out concurrency issues\n           between this step's run and the next step's trigger. */\n        const elem = document.querySelector('.o_survey_session_attendees_count');\n        elem.classList.add(\"waitrpc\");\n        elem.textContent = '0';\n    }\n}, {\n    trigger: '.o_survey_session_attendees_count.waitrpc:contains(\"3\")',\n    isCheck: true\n}, {\n    trigger: 'h1',\n    run: function () {\n        var e = $.Event('keydown');\n        e.key = \"ArrowRight\";\n        $(document).trigger(e); // start session\n    }\n}, {\n    trigger: 'h1:contains(\"Nickname\")',\n    run: function () {} // check first question is displayed\n}])});\n", "/** @odoo-module **/\n\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n/**\n * Tool that gathers common steps to every 'survey session' tours.\n */\nexport const accessSurveysteps = [\n    stepUtils.showAppsMenuItem(),\n    {\n        trigger: '.o_app[data-menu-xmlid=\"survey.menu_surveys\"]',\n        edition: \"community\",\n    },\n    {\n        trigger: '.o_app[data-menu-xmlid=\"survey.menu_surveys\"]',\n        edition: \"enterprise\",\n    },\n    {\n        trigger: '.oe_kanban_card:contains(\"User Session Survey\")',\n    },\n];\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('hr_skills_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(),\n    {\n        content: \"Open Employees app\",\n        trigger: \".o_app[data-menu-xmlid='hr.menu_hr_root']\",\n    },\n    {\n        content: \"Create a new employee\",\n        trigger: \".o-kanban-button-new\",\n    },\n    {\n        content: \"Pick a name\",\n        trigger: \".o_field_widget[name='name'] input\",\n        run: \"text Jony McHallyFace\",\n    },\n    {\n        content: \"Save\",\n        trigger: \".o_form_button_save\",\n    },\n    {\n        content: \"Add a new Resume experience\",\n        trigger: \".o_field_resume_one2many tr.o_resume_group_header button.btn-secondary\",\n    },\n    {\n        content: \"Enter some company name\",\n        trigger: \".modal-body .o_field_widget[name='name'] input\",\n        run: \"text Mamie Rock\",\n    },\n    {\n        content: \"Set start date\",\n        trigger: \".o_field_widget[name='date_start'] input\",\n        run: \"text 12/05/2017\",\n    },\n    {\n        content: \"Give some description\",\n        trigger: \".o_field_widget[name='description'] textarea\",\n        run: \"text Sang some songs and played some music\",\n    },\n    {\n        content: \"Save it\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Edit newly created experience\",\n        trigger: \".o_resume_line_title:contains('Mamie Rock')\",\n        run: \"click\",\n    },\n    {\n        content: \"Change type\",\n        trigger: \".o_field_widget[name='line_type_id'] input\",\n        run: \"text Experience\",\n    },\n    {\n        content: \"Choose experience\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Experience\")',\n        run: \"click\",\n    },\n    {\n        content: \"Save experience change\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Add a new Skill\",\n        trigger: \".o_field_skills_one2many button:contains('Pick a skill from the list')\",\n    },\n    {\n        content: \"Select Music\",\n        trigger: \".o_field_widget[name='skill_type_id'] label:contains('Best Music')\",\n        run: \"click\",\n    },\n    {\n        content: \"Select a song\",\n        trigger: \".o_field_widget[name='skill_id'] input\",\n        run: \"text Fortun\",\n    },\n    {\n        content: \"Choose the song\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Fortunate Son\")',\n        run: \"click\",\n    },\n    {\n        content: \"Select a level\",\n        trigger: \".o_field_widget[name='skill_level_id'] input\",\n        run: \"text Level\",\n    },\n    {\n        content: \"Choose the level\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Level 2\")',\n        run: \"click\",\n    },\n    {\n        content: \"Save new skill\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Check if item is added\",\n        trigger: \".o_data_row td.o_data_cell:contains('Fortunate Son')\",\n        run: () => {},\n    },\n    {\n        content: \"Add a new Skill\",\n        trigger: \".o_field_skills_one2many button:contains('ADD')\",\n    },\n    {\n        content: \"Select a song\", // \"Music\" should be already selected\n        trigger: \".o_field_widget[name='skill_id'] input\",\n        run: \"text Mary\",\n    },\n    {\n        content: \"Choose the song\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Oh Mary\")',\n        run: \"click\",\n    },\n    {\n        content: \"Select a level\",\n        trigger: \".o_field_widget[name='skill_level_id'] input\",\n        run: \"text Level 7\",\n    },\n    {\n        content: \"Choose the level\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Level 7\")',\n        run: \"click\",\n    },\n    {\n        content: \"Save new skill\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Check if item is added\",\n        trigger: \".o_data_row td.o_data_cell:contains('Oh Mary')\",\n        run: () => {},\n    },\n    ...stepUtils.saveForm(),\n]});\n", "/** @odoo-module **/\n\nimport { jsonrpc } from \"@web/core/network/rpc_service\";\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction openRoot() {\n    return [{\n        content: \"return to client root to avoid race condition\",\n        trigger: 'body',\n        run() {\n            $('body').addClass('wait');\n            window.location = '/web';\n        }\n    }, {\n        content: \"wait for client reload\",\n        trigger: 'body:not(.wait)',\n        run() {}\n    }];\n}\nfunction openUserProfileAtSecurityTab() {\n    return [{\n        content: 'Open user account menu',\n        trigger: '.o_user_menu .dropdown-toggle',\n        run: 'click',\n    }, {\n        content: \"Open preferences / profile screen\",\n        trigger: '[data-menu=settings]',\n        run: 'click',\n    }, {\n        content: \"Switch to security tab\",\n        trigger: 'a[role=tab]:contains(\"Account Security\")',\n        run: 'click',\n    }];\n}\n\n/**\n * Checks that the TOTP button is in the specified state (true = enabled =\n * can disable, false = disabled = can enable), then closes the profile dialog\n * if it's one (= hr not installed).\n *\n * If no totp state is provided, just checks that the toggle exists.\n */\nfunction closeProfileDialog({content, totp_state}) {\n    let trigger;\n    switch (totp_state) {\n    case true: trigger = 'button[name=action_totp_disable]'; break;\n    case false: trigger = 'button[name=action_totp_enable_wizard]'; break;\n    case undefined: trigger = 'button.o_auth_2fa_btn'; break;\n    default: throw new Error(`Invalid totp state ${totp_state}`)\n    }\n\n    return [{\n        content,\n        trigger,\n        run() {\n            const $modal = this.$anchor.parents('.o_dialog');\n            if ($modal.length) {\n                $modal.find('button[name=preference_cancel]').click()\n            }\n        }\n    }, {\n        trigger: 'body',\n        async run() {\n            while (document.querySelector('.o_dialog')) {\n                await Promise.resolve();\n            }\n            this.$anchor.addClass('dialog-closed');\n        },\n    }, {\n        trigger: 'body.dialog-closed',\n        run() {},\n    }];\n}\n\nregistry.category(\"web_tour.tours\").add('totp_tour_setup', {\n    test: true,\n    url: '/web',\n    steps: () => [...openUserProfileAtSecurityTab(), {\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_enable_wizard]',\n}, {\n    content: \"Check that we have to enter enhanced security mode and input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text demo',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"When requested to do so\")',\n    run() {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    async run(helpers) {\n        const $secret = this.$anchor.closest('div').find('[name=secret] span:first-child');\n        const $copyBtn = $secret.find('button');\n        $copyBtn.remove();\n        const token = await jsonrpc('/totphook', {\n            secret: $secret.text()\n        });\n        helpers.text(token, '[name=code] input');\n        helpers.click('button.btn-primary:contains(Activate)');\n        $('body').addClass('got-token')\n    }\n}, {\n    content: 'wait for rpc',\n    trigger: 'body.got-token',\n    run() {}\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n...closeProfileDialog({\n    content: \"Check that the button has changed\",\n    totp_state: true,\n}),\n]});\n\nregistry.category(\"web_tour.tours\").add('totp_login_enabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    async run(helpers) {\n        // TODO: if tours are ever async-aware the click should get moved out,\n        //       but currently there's no great way to make the tour wait until\n        //       we've retrieved and set the token: `:empty()` is aboutthe text\n        //       content of the HTML element, not the JS value property. We\n        //       could set a class but that's really no better than\n        //       procedurally clicking the button after we've set the input.\n        const token = await jsonrpc('/totphook');\n        helpers.text(token);\n        helpers.click('button:contains(\"Log in\")');\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .dropdown-toggle\",\n    run() {}\n}]});\n\nregistry.category(\"web_tour.tours\").add('totp_login_device', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"check remember device box\",\n    trigger: 'label[for=switch-remember]',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    async run(helpers) {\n        const token = await jsonrpc('/totphook')\n        helpers.text(token);\n        helpers.click('button:contains(\"Log in\")');\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .dropdown-toggle\",\n    run: 'click',\n}, {\n    content: \"click the Log out button\",\n    trigger: '.dropdown-item[data-menu=logout]',\n}, {\n    content: \"check that we're back on the login page or go to it\",\n    trigger: 'input#login, a:contains(Log in)'\n}, {\n    content: \"input login again\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password again',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button again\",\n    trigger: 'button:contains(\"Log in\")',\n},  {\n    content: \"check we're logged in without 2FA\",\n    trigger: \".o_user_menu .dropdown-toggle\",\n    run() {}\n},\n// now go and disable two-factor authentication would be annoying to do in a separate tour\n// because we'd need to login & totp again as HttpCase.authenticate can't\n// succeed w/ totp enabled\n...openUserProfileAtSecurityTab(),\n{\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_disable]',\n}, {\n    content: \"Check that we have to enter enhanced security mode and input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text demo',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n...closeProfileDialog({\n    content: \"Check that the button has changed\",\n    totp_state: false\n}),\n]});\n\nregistry.category(\"web_tour.tours\").add('totp_login_disabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n},\n// normally we'd end the tour here as it's all we care about but there are a\n// bunch of ongoing queries from the loading of the web client which cause\n// issues, so go and open the preferences / profile screen to make sure\n// everything settles down\n...openUserProfileAtSecurityTab(),\n// close the dialog if that makes sense\n...closeProfileDialog({})\n]});\n\nconst columns = {};\nregistry.category(\"web_tour.tours\").add('totp_admin_disables', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    content: 'Go to settings',\n    trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n}, {\n    content: 'Wait for page',\n    trigger: '.o_menu_brand:contains(\"Settings\")',\n    run() {}\n}, {\n    content: \"Open Users menu\",\n    trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n}, {\n    content: \"Open Users view\",\n    trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n    run(helpers) {\n        // funny story: the users view we're trying to reach, sometimes we're\n        // already there, but if we re-click the next step executes before the\n        // action has the time to re-load, the one after that doesn't, and our\n        // selection get discarded by the action reloading, so here try to\n        // see if we're already on the users action through the breadcrumb and\n        // just close the menu if so\n        const $crumb = $('.breadcrumb');\n        if ($crumb.text().indexOf('Users') === -1) {\n            // on general settings page, click menu\n            helpers.click();\n        } else {\n            // else close menu\n            helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n        }\n    }\n}, {\n    content: \"Find Demo User\",\n    trigger: 'td.o_data_cell:contains(\"demo\")',\n    run(helpers) {\n        const $titles = this.$anchor.closest('table').find('tr:first th');\n        for (let i=0; i<$titles.length; ++i) {\n            columns[$titles[i].getAttribute('data-name')] = i;\n        }\n        const $row = this.$anchor.closest('tr');\n        const sel = $row.find('.o_list_record_selector input[type=checkbox]');\n        helpers.click(sel);\n    }\n}, {\n    content: \"Open Actions menu\",\n    trigger: 'button.dropdown-toggle:contains(\"Action\")'\n}, {\n    content: \"Select totp remover\",\n    trigger: 'span.dropdown-item:contains(Disable two-factor authentication)'\n}, { // enhanced security yo\n    content: \"Check that we have to enter enhanced security mode & input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text admin',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, ...closeProfileDialog({\n    content: \"check that demo user has been de-totp'd\",\n    totp_state: false,\n}),\n]})\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction openAccountSettingsTab() {\n    return [{\n        content: 'Go to settings',\n        trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n    }, {\n        content: 'Wait for page',\n        trigger: '.o_menu_brand:contains(\"Settings\")',\n        run: () => {}\n    }, {\n        content: \"Open Users menu\",\n        trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n    }, {\n        content: \"Open Users view\",\n        trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n        run: function (helpers) {\n            // funny story: the users view we're trying to reach, sometimes we're\n            // already there, but if we re-click the next step executes before the\n            // action has the time to re-load, the one after that doesn't, and our\n            // selection get discarded by the action reloading, so here try to\n            // see if we're already on the users action through the breadcrumb and\n            // just close the menu if so\n            const $crumb = $('.breadcrumb');\n            if ($crumb.text().indexOf('Users') === -1) {\n                // on general settings page, click menu\n                helpers.click();\n            } else {\n                // else close menu\n                helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n            }\n        }\n    }];\n}\n\nregistry.category(\"web_tour.tours\").add('totp_admin_self_invite', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(admin)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that user cannot invite themselves to use 2FA.\",\n    trigger: \"body\",\n    run: function () {\n        const inviteBtn = $('button:contains(Invite to use 2FA)')[0];\n        if (!inviteBtn) {\n            $('body').addClass('CannotInviteYourself');\n        }\n    }\n}, {\n    content: \"check that user cannot invite themself.\",\n    trigger: \"body.CannotInviteYourself\",\n    isCheck: true,\n}]});\n\nregistry.category(\"web_tour.tours\").add('totp_admin_invite', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that demo user can be invited to use 2FA.\",\n    trigger: \"button:contains(Invite to use 2FA)\",\n    isCheck: true,\n}]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { jsonrpc } from \"@web/core/network/rpc_service\";\n\nregistry.category(\"web_tour.tours\").add('totportal_tour_setup', {\n    test: true,\n    url: '/my/security',\n    steps: () => [{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_enable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"scan the barcode below\")',\n    run: () => {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    run: async function(helpers) {\n        const secret = this.$anchor.closest('div').find('span[name=\"secret\"]').text();\n        const token = await jsonrpc('/totphook', {\n            secret\n        });\n        helpers._text(helpers._get_action_values('input[name=code]'), token);\n        helpers._click(helpers._get_action_values('button.btn-primary:contains(Activate)'));\n    }\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Disable two-factor authentication)',\n    run: () => {}\n}]});\n\nregistry.category(\"web_tour.tours\").add('totportal_login_enabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    run: async function (helpers) {\n        const token = await jsonrpc('/totphook');\n        helpers._text(helpers._get_action_values(), token);\n        // FIXME: is there a way to put the button as its own step trigger without\n        //        the tour straight blowing through and not waiting for this?\n        helpers._click(helpers._get_action_values('button:contains(\"Log in\")'));\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(My account)\",\n    run: () => {}\n}, {\n    content: \"go back to security\",\n    trigger: \"a:contains(Security)\",\n},{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_disable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Enable two-factor authentication)',\n    run: () => {}\n}]});\n\nregistry.category(\"web_tour.tours\").add('totportal_login_disabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(My account)\",\n    run: () => {}\n}]});\n", "/** @odoo-module */\n\n/**\n * Add custom step to check allow_billable during project creation\n * to be able to set a partner on project/tasks.\n */\nimport { registry } from \"@web/core/registry\";\nimport \"@project/../tests/tours/project_tour\";\nimport { patch } from \"@web/core/utils/patch\";\n\npatch(registry.category(\"web_tour.tours\").get(\"project_test_tour\"), {\n    steps() {\n        const originalSteps = super.steps();\n        const projectCreationStepIndex = originalSteps.findIndex((step) => step.id === \"project_creation\");\n        originalSteps.splice(projectCreationStepIndex, 0, {\n            trigger: \"div[name='allow_billable'] input\",\n        });\n\n        return originalSteps;\n    }\n})\n"], "file": "/web/assets/463a3b5/web.assets_tests.js", "sourceRoot": "../../../"}